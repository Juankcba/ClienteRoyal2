{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\juang\\\\OneDrive\\\\Escritorio\\\\Soho\\\\pdv-react-adminLTE\\\\base\\\\src\\\\components\\\\proyectos\\\\NuevoProyecto.js\";\nimport React, { Fragment, useState, useContext, useEffect } from \"react\";\nimport proyectoContext from \"../../context/proyectos/proyectoContext\";\nimport Tabla from \"../tabla/Tabla\";\nimport { size } from \"lodash\";\n\nconst NuevoProyecto = props => {\n  const {\n    setOpcion\n  } = props;\n  useEffect(() => {\n    const resultado = fetch(\"http://erpdv.preupdv.cl:8090/v1/carro/programas\");\n    const programas = resultado.then(respuesta => respuesta.json());\n    programas.then(resultado => {\n      console.log(\"cantidad de elementos \", size(resultado));\n      guardarProgramas(resultado);\n    }).catch(e => console.log(e));\n  }, []); //obtener el state del formulario\n\n  const proyectosContext = useContext(proyectoContext);\n  const {\n    formulario,\n    errorformulario,\n    mostrarFormulario,\n    agregarProyecto,\n    mostrarError\n  } = proyectosContext; //state para proyecto\n\n  const [programas, guardarProgramas] = useState({}); //mostar formulario\n\n  const onClickFormulario = () => {\n    //mostrarFormulario();\n    setOpcion( /*#__PURE__*/React.createElement(Tabla, {\n      programas: programas,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }\n    }));\n  };\n\n  const onClickProducto = () => {// mostrarProductos();\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-block btn-primario\",\n    onClick: onClickFormulario,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, \"Programas \", size(programas)));\n};\n\nexport default NuevoProyecto;","map":{"version":3,"sources":["C:/Users/juang/OneDrive/Escritorio/Soho/pdv-react-adminLTE/base/src/components/proyectos/NuevoProyecto.js"],"names":["React","Fragment","useState","useContext","useEffect","proyectoContext","Tabla","size","NuevoProyecto","props","setOpcion","resultado","fetch","programas","then","respuesta","json","console","log","guardarProgramas","catch","e","proyectosContext","formulario","errorformulario","mostrarFormulario","agregarProyecto","mostrarError","onClickFormulario","onClickProducto"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,UAApC,EAAgDC,SAAhD,QAAiE,OAAjE;AACA,OAAOC,eAAP,MAA4B,yCAA5B;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SAAQC,IAAR,QAAmB,QAAnB;;AACA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,QAAM;AAACC,IAAAA;AAAD,MAAcD,KAApB;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,SAAS,GAAGC,KAAK,CAAC,iDAAD,CAAvB;AACA,UAAMC,SAAS,GAAGF,SAAS,CAACG,IAAV,CAAgBC,SAAD,IAAeA,SAAS,CAACC,IAAV,EAA9B,CAAlB;AACAH,IAAAA,SAAS,CACNC,IADH,CACSH,SAAD,IAAe;AACnBM,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAuCX,IAAI,CAACI,SAAD,CAA3C;AACAQ,MAAAA,gBAAgB,CAACR,SAAD,CAAhB;AACD,KAJH,EAKGS,KALH,CAKUC,CAAD,IAAOJ,OAAO,CAACC,GAAR,CAAYG,CAAZ,CALhB;AAOD,GAVQ,EAUN,EAVM,CAAT,CAH+B,CAc/B;;AACA,QAAMC,gBAAgB,GAAGnB,UAAU,CAACE,eAAD,CAAnC;AACA,QAAM;AACJkB,IAAAA,UADI;AAEJC,IAAAA,eAFI;AAGJC,IAAAA,iBAHI;AAIJC,IAAAA,eAJI;AAKJC,IAAAA;AALI,MAMFL,gBANJ,CAhB+B,CAwB/B;;AACA,QAAM,CAACT,SAAD,EAAYM,gBAAZ,IAAgCjB,QAAQ,CAAC,EAAD,CAA9C,CAzB+B,CA2B/B;;AACA,QAAM0B,iBAAiB,GAAG,MAAM;AAC9B;AACAlB,IAAAA,SAAS,eACT,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAEG,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADS,CAAT;AAMD,GARD;;AAUA,QAAMgB,eAAe,GAAG,MAAM,CAC5B;AACD,GAFD;;AAGA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,4BAFZ;AAGE,IAAA,OAAO,EAAED,iBAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAKarB,IAAI,CAACM,SAAD,CALjB,CADF,CADF;AAgBD,CAzDD;;AA2DA,eAAeL,aAAf","sourcesContent":["import React, { Fragment, useState, useContext, useEffect } from \"react\";\r\nimport proyectoContext from \"../../context/proyectos/proyectoContext\";\r\nimport Tabla from \"../tabla/Tabla\";\r\nimport {size} from \"lodash\";\r\nconst NuevoProyecto = (props) => {\r\n  const {setOpcion} = props; \r\n\r\n  useEffect(() => {\r\n    const resultado = fetch(\"http://erpdv.preupdv.cl:8090/v1/carro/programas\");\r\n    const programas = resultado.then((respuesta) => respuesta.json());\r\n    programas\r\n      .then((resultado) => {\r\n        console.log(\"cantidad de elementos \" , size(resultado));\r\n        guardarProgramas(resultado);\r\n      })\r\n      .catch((e) => console.log(e));\r\n    \r\n  }, [])\r\n  //obtener el state del formulario\r\n  const proyectosContext = useContext(proyectoContext);\r\n  const {\r\n    formulario,\r\n    errorformulario,\r\n    mostrarFormulario,\r\n    agregarProyecto,\r\n    mostrarError,\r\n  } = proyectosContext;\r\n\r\n  //state para proyecto\r\n  const [programas, guardarProgramas] = useState({});\r\n  \r\n  //mostar formulario\r\n  const onClickFormulario = () => {\r\n    //mostrarFormulario();\r\n    setOpcion(\r\n    <Tabla programas={programas} />\r\n    );\r\n\r\n\r\n   \r\n  };\r\n\r\n  const onClickProducto = () => {\r\n    // mostrarProductos();\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-block btn-primario\"\r\n        onClick={onClickFormulario}\r\n      >\r\n        Programas {size(programas)}\r\n      </button>\r\n      \r\n      \r\n     \r\n    \r\n      \r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default NuevoProyecto;\r\n"]},"metadata":{},"sourceType":"module"}