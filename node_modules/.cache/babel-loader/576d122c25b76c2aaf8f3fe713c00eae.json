{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\juang\\\\OneDrive\\\\Escritorio\\\\Soho\\\\pdv-react-adminLTE\\\\base\\\\src\\\\components\\\\proyectos\\\\NuevoProyecto.js\";\nimport React, { Fragment, useState, useContext, useEffect } from \"react\";\nimport proyectoContext from \"../../context/proyectos/proyectoContext\";\nimport Tabla from \"../tabla/Tabla\";\nimport { size } from \"lodash\";\n\nconst NuevoProyecto = props => {\n  const {\n    setOpcion\n  } = props;\n  useEffect(() => {\n    const resultado = fetch(\"http://erpdv.preupdv.cl:8090/v1/carro/programas\");\n    const programas = resultado.then(respuesta => respuesta.json());\n    programas.then(resultado => {\n      console.log(\"cantidad de elementos \", size(resultado));\n      guardarProgramas(resultado);\n    }).catch(e => console.log(e));\n  }, []); //obtener el state del formulario\n\n  const proyectosContext = useContext(proyectoContext);\n  const {\n    formulario,\n    errorformulario,\n    mostrarFormulario,\n    agregarProyecto,\n    mostrarError\n  } = proyectosContext; //state para proyecto\n\n  const [programas, guardarProgramas] = useState({});\n  const [proyecto, guardarProyecto] = useState({\n    nombre: \"\"\n  }); //Extraer nombre de proyecto\n\n  const {\n    nombre\n  } = proyecto; //lee los contenidos del input\n\n  const onChangeProyecto = e => {\n    guardarProyecto({ ...proyecto,\n      [e.target.name]: e.target.value\n    });\n  }; //cuando el usuario envia el proyecto\n\n\n  const onSubmitProyecto = e => {\n    e.preventDefault(); //validar el proyecto\n\n    if (nombre === \"\") {\n      mostrarError();\n      return;\n    } //agregar el state\n\n\n    agregarProyecto(proyecto); //reinicar el form\n\n    guardarProyecto({\n      nombre: \"\"\n    });\n  }; //mostar formulario\n\n\n  const onClickFormulario = () => {\n    //mostrarFormulario();\n    setOpcion( /*#__PURE__*/React.createElement(Tabla, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }\n    }));\n  };\n\n  const onClickProducto = () => {// mostrarProductos();\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-block btn-primario\",\n    onClick: onClickFormulario,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, \"Programas \", size(programas)));\n};\n\nexport default NuevoProyecto;","map":{"version":3,"sources":["C:/Users/juang/OneDrive/Escritorio/Soho/pdv-react-adminLTE/base/src/components/proyectos/NuevoProyecto.js"],"names":["React","Fragment","useState","useContext","useEffect","proyectoContext","Tabla","size","NuevoProyecto","props","setOpcion","resultado","fetch","programas","then","respuesta","json","console","log","guardarProgramas","catch","e","proyectosContext","formulario","errorformulario","mostrarFormulario","agregarProyecto","mostrarError","proyecto","guardarProyecto","nombre","onChangeProyecto","target","name","value","onSubmitProyecto","preventDefault","onClickFormulario","onClickProducto"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,UAApC,EAAgDC,SAAhD,QAAiE,OAAjE;AACA,OAAOC,eAAP,MAA4B,yCAA5B;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SAAQC,IAAR,QAAmB,QAAnB;;AACA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,QAAM;AAACC,IAAAA;AAAD,MAAcD,KAApB;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,SAAS,GAAGC,KAAK,CAAC,iDAAD,CAAvB;AACA,UAAMC,SAAS,GAAGF,SAAS,CAACG,IAAV,CAAgBC,SAAD,IAAeA,SAAS,CAACC,IAAV,EAA9B,CAAlB;AACAH,IAAAA,SAAS,CACNC,IADH,CACSH,SAAD,IAAe;AACnBM,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAuCX,IAAI,CAACI,SAAD,CAA3C;AACAQ,MAAAA,gBAAgB,CAACR,SAAD,CAAhB;AACD,KAJH,EAKGS,KALH,CAKUC,CAAD,IAAOJ,OAAO,CAACC,GAAR,CAAYG,CAAZ,CALhB;AAOD,GAVQ,EAUN,EAVM,CAAT,CAH+B,CAc/B;;AACA,QAAMC,gBAAgB,GAAGnB,UAAU,CAACE,eAAD,CAAnC;AACA,QAAM;AACJkB,IAAAA,UADI;AAEJC,IAAAA,eAFI;AAGJC,IAAAA,iBAHI;AAIJC,IAAAA,eAJI;AAKJC,IAAAA;AALI,MAMFL,gBANJ,CAhB+B,CAwB/B;;AACA,QAAM,CAACT,SAAD,EAAYM,gBAAZ,IAAgCjB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAAC0B,QAAD,EAAWC,eAAX,IAA8B3B,QAAQ,CAAC;AAC3C4B,IAAAA,MAAM,EAAE;AADmC,GAAD,CAA5C,CA1B+B,CA8B/B;;AACA,QAAM;AAAEA,IAAAA;AAAF,MAAaF,QAAnB,CA/B+B,CAiC/B;;AACA,QAAMG,gBAAgB,GAAIV,CAAD,IAAO;AAC9BQ,IAAAA,eAAe,CAAC,EACd,GAAGD,QADW;AAEd,OAACP,CAAC,CAACW,MAAF,CAASC,IAAV,GAAiBZ,CAAC,CAACW,MAAF,CAASE;AAFZ,KAAD,CAAf;AAID,GALD,CAlC+B,CAyC/B;;;AACA,QAAMC,gBAAgB,GAAId,CAAD,IAAO;AAC9BA,IAAAA,CAAC,CAACe,cAAF,GAD8B,CAG9B;;AACA,QAAIN,MAAM,KAAK,EAAf,EAAmB;AACjBH,MAAAA,YAAY;AACZ;AACD,KAP6B,CAQ9B;;;AACAD,IAAAA,eAAe,CAACE,QAAD,CAAf,CAT8B,CAU9B;;AACAC,IAAAA,eAAe,CAAC;AACdC,MAAAA,MAAM,EAAE;AADM,KAAD,CAAf;AAGD,GAdD,CA1C+B,CAyD/B;;;AACA,QAAMO,iBAAiB,GAAG,MAAM;AAC9B;AACA3B,IAAAA,SAAS,eACT,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADS,CAAT;AAMD,GARD;;AAUA,QAAM4B,eAAe,GAAG,MAAM,CAC5B;AACD,GAFD;;AAGA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,4BAFZ;AAGE,IAAA,OAAO,EAAED,iBAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAKa9B,IAAI,CAACM,SAAD,CALjB,CADF,CADF;AAgBD,CAvFD;;AAyFA,eAAeL,aAAf","sourcesContent":["import React, { Fragment, useState, useContext, useEffect } from \"react\";\r\nimport proyectoContext from \"../../context/proyectos/proyectoContext\";\r\nimport Tabla from \"../tabla/Tabla\";\r\nimport {size} from \"lodash\";\r\nconst NuevoProyecto = (props) => {\r\n  const {setOpcion} = props; \r\n\r\n  useEffect(() => {\r\n    const resultado = fetch(\"http://erpdv.preupdv.cl:8090/v1/carro/programas\");\r\n    const programas = resultado.then((respuesta) => respuesta.json());\r\n    programas\r\n      .then((resultado) => {\r\n        console.log(\"cantidad de elementos \" , size(resultado));\r\n        guardarProgramas(resultado);\r\n      })\r\n      .catch((e) => console.log(e));\r\n    \r\n  }, [])\r\n  //obtener el state del formulario\r\n  const proyectosContext = useContext(proyectoContext);\r\n  const {\r\n    formulario,\r\n    errorformulario,\r\n    mostrarFormulario,\r\n    agregarProyecto,\r\n    mostrarError,\r\n  } = proyectosContext;\r\n\r\n  //state para proyecto\r\n  const [programas, guardarProgramas] = useState({});\r\n  const [proyecto, guardarProyecto] = useState({\r\n    nombre: \"\",\r\n  });\r\n\r\n  //Extraer nombre de proyecto\r\n  const { nombre } = proyecto;\r\n\r\n  //lee los contenidos del input\r\n  const onChangeProyecto = (e) => {\r\n    guardarProyecto({\r\n      ...proyecto,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  //cuando el usuario envia el proyecto\r\n  const onSubmitProyecto = (e) => {\r\n    e.preventDefault();\r\n\r\n    //validar el proyecto\r\n    if (nombre === \"\") {\r\n      mostrarError();\r\n      return;\r\n    }\r\n    //agregar el state\r\n    agregarProyecto(proyecto);\r\n    //reinicar el form\r\n    guardarProyecto({\r\n      nombre: \"\",\r\n    });\r\n  };\r\n  //mostar formulario\r\n  const onClickFormulario = () => {\r\n    //mostrarFormulario();\r\n    setOpcion(\r\n    <Tabla />\r\n    );\r\n\r\n\r\n   \r\n  };\r\n\r\n  const onClickProducto = () => {\r\n    // mostrarProductos();\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-block btn-primario\"\r\n        onClick={onClickFormulario}\r\n      >\r\n        Programas {size(programas)}\r\n      </button>\r\n      \r\n      \r\n     \r\n    \r\n      \r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default NuevoProyecto;\r\n"]},"metadata":{},"sourceType":"module"}