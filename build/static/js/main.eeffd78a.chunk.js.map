{"version":3,"sources":["components/layout/logo.png","context/alertas/alertaContext.js","context/autenticacion/authContext.js","components/auth/Login.js","components/auth/NuevaCuenta.js","context/proyectos/proyectoContext.js","components/tabla/Tabla.js","components/proyectos/NuevoProyecto.js","context/tareas/tareaContext.js","components/layout/Sidebar.js","components/layout/Barra.js","components/tareas/FormTarea.js","components/proyectos/Proyectos.js","components/Header.jsx","context/proyectos/proyectoReducer.js","types/index.js","config/axios.js","context/proyectos/proyectoState.js","context/tareas/tareaReducer.js","context/tareas/tareaState.js","context/alertas/alertaReducer.js","context/alertas/alertaState.js","context/autenticacion/authReducer.js","config/tokenAuth.js","context/autenticacion/authState.js","components/rutas/RutaPrivada.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","alertaContext","createContext","AuthContext","Login","props","useContext","AlertaContext","alerta","mostrarAlerta","authContext","mensaje","autenticado","iniciarSesion","useEffect","history","push","msg","categoria","useState","email","password","usuario","guardarUsuario","onChange","e","target","name","value","className","onSubmit","preventDefault","trim","htmlFor","type","id","placeholder","to","NuevaCuenta","registrarUsuario","nombre","confirmar","length","proyectoContext","Tabla","datos","title","console","log","class","href","map","item","i","key","priceBase","priceBasePlataforma","commerceCode","countryId","active","regionId","fetch","require","NuevoProyecto","axios","setOpcion","programas","guardarProgramas","sedes","guardarSedes","regiones","setRegiones","ciudades","setCiudades","comunas","setComunas","ramos","setRamos","a","url","method","headers","replace","response","json","size","obtenerProgramas","get","data","obtenerSedes","obtenerRegiones","obtenerCiudades","obtenerRamos","obtenerComuna","onClick","tareaContext","Sidebar","src","logo","alt","Barra","usuarioAutenticado","cerrarSesion","FormTarea","proyecto","tareasContext","tareaseleccionada","errortarea","agregarTarea","validarTarea","obtenerTareas","actualizarTarea","limpiarTarea","guardarTarea","producto","tarea","comentario","proyectoActual","_id","Proyectos","undefined","opcion","Header","state","action","formulario","proyectos","payload","errorformulario","filter","clienteAxios","create","baseURL","process","ProyectoState","useReducer","proyectoReducer","dispatch","obtenerProyectos","resultado","agregarProyecto","post","eliminarProyecto","proyectoId","delete","Provider","mostrarFormulario","mostrarError","children","tareasproyecto","TareaState","TareaReducer","params","tareas","eliminarTarea","put","guardarTareaActual","AlertaState","alertaReducer","setTimeout","localStorage","setItem","token","cargando","removeItem","tokenAuth","defaults","common","AuthState","initialState","getItem","authReducer","respuesta","RutaPrivada","Component","component","render","App","Date","getFullYear","exact","path","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.eeffd78a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.20e55eb8.png\";","import {createContext} from 'react';\r\n\r\nconst alertaContext = createContext();\r\n\r\nexport default alertaContext;","import {createContext} from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport default AuthContext;","import React, {useContext,useState,useEffect} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport AlertaContext from '../../context/alertas/alertaContext';\r\nimport AuthContext from '../../context/autenticacion/authContext';\r\n\r\nconst Login = (props) => {\r\n     // extraer los valores del context \r\n     const alertaContext = useContext(AlertaContext);\r\n     const {alerta, mostrarAlerta} = alertaContext;\r\n \r\n     const authContext = useContext(AuthContext);\r\n     const {mensaje, autenticado, iniciarSesion} = authContext;\r\n    //en caso que el password o el usuario no exista\r\n     useEffect(() =>{\r\n        if(autenticado){\r\n            props.history.push('/proyecto')\r\n        }\r\n        if(mensaje){\r\n            mostrarAlerta(mensaje.msg,mensaje.categoria);\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [mensaje, autenticado,props.history ]);\r\n    //state para iniciar sesion\r\n    const [usuario, guardarUsuario] = useState({\r\n        email:'',\r\n        password:''\r\n    });\r\n\r\n    const { email, password } = usuario;\r\n    const onChange = e => {\r\n        guardarUsuario({\r\n            ...usuario,\r\n            [e.target.name] : e.target.value\r\n        })\r\n\r\n    }\r\n\r\n    //cuando el usuario quiere iniciar sesion\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        //validar que no haya campos vacios\r\n\r\n        if(email.trim() === '' || password.trim() === ''){\r\n            mostrarAlerta('Todos los campos son obligatorios','alerta-error');\r\n        }\r\n        //Pasarlo al action\r\n        iniciarSesion({email,password});\r\n\r\n    }\r\n    return (  \r\n\r\n           <div className=\"form-usuario\">\r\n               {alerta ? (<div className={`alerta ${alerta.categoria}`}>{alerta.msg} </div>) : null}\r\n               <div className =\"contenedor-form sombra-dark\">\r\n                   <h1>Iniciar Sesión</h1>\r\n                   <form\r\n                        onSubmit={onSubmit}\r\n                   >\r\n                       <div className=\"campo-form\">\r\n                           <label htmlFor=\"email\">Email</label>\r\n                           <input \r\n                                type=\"email\"\r\n                                id=\"email\"\r\n                                name=\"email\"\r\n                                placeholder=\"Tu Email\"\r\n                                value={email}\r\n                                onChange={onChange}\r\n                            />\r\n                       </div>\r\n                       <div className=\"campo-form\">\r\n                           <label htmlFor=\"email\">Password</label>\r\n                           <input \r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                name=\"password\"\r\n                                placeholder=\"Tu Password\"\r\n                                value={password}\r\n                                onChange={onChange}\r\n                            />\r\n                       </div>\r\n                       <div className =\"campo-form\">\r\n                           <input type=\"submit\" className=\"btn btn-primario btn-block\"\r\n                           value=\"Iniciar Sesión\" />\r\n                       </div>\r\n                   </form>\r\n\r\n                   <Link to={'nueva-cuenta'} className=\"enlace-cuenta\">\r\n                       Obtener Cuenta\r\n                   </Link>\r\n               </div>\r\n\r\n           </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Login;","import React, {useState,useContext,useEffect}  from 'react';\r\n\r\nimport {Link} from 'react-router-dom';\r\nimport AlertaContext from '../../context/alertas/alertaContext';\r\nimport AuthContext from '../../context/autenticacion/authContext';\r\n\r\n\r\n\r\nconst NuevaCuenta = (props) => {\r\n\r\n    // extraer los valores del context \r\n    const alertaContext = useContext(AlertaContext);\r\n    const {alerta, mostrarAlerta} = alertaContext;\r\n\r\n    const authContext = useContext(AuthContext);\r\n    const {mensaje, autenticado, registrarUsuario} = authContext;\r\n\r\n    //en caso que haya un registro duplicado\r\n    useEffect(() =>{\r\n        if(autenticado){\r\n            props.history.push('/proyecto')\r\n        }\r\n        if(mensaje){\r\n            mostrarAlerta(mensaje.msg,mensaje.categoria);\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [mensaje, autenticado,props.history ]);\r\n    //state para iniciar sesion\r\n    const [usuario, guardarUsuario] = useState({\r\n        nombre:'',\r\n        email:'',\r\n        password:'',\r\n        confirmar:''\r\n    });\r\n\r\n    const {nombre, email, password, confirmar } = usuario;\r\n    const onChange = e => {\r\n        guardarUsuario({\r\n            ...usuario,\r\n            [e.target.name] : e.target.value\r\n        })\r\n\r\n    }\r\n\r\n    //cuando el usuario quiere iniciar sesion\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        //validar que no haya campos vacios\r\n        if(nombre.trim() === '' || email.trim() === '' ||\r\n        password.trim() === '' || confirmar.trim() === '' ){\r\n            mostrarAlerta('Todos los Campos son obligarios','alerta-error');\r\n            return;\r\n        }\r\n        //password minimo\r\n        if(password.length < 6){\r\n            mostrarAlerta('El password debe ser de al menos 6 caracteres','alerta-error');\r\n            return;\r\n        }\r\n        //los 2 password sean iguales\r\n        if(password !== confirmar){\r\n            mostrarAlerta('Los passwords no son iguales','alerta-error');\r\n            return;\r\n\r\n        }\r\n\r\n        //Pasarlo al action\r\n        registrarUsuario({nombre,email,password});\r\n\r\n    }\r\n    return (  \r\n\r\n           <div className=\"form-usuario\">\r\n               {alerta ? (<div className={`alerta ${alerta.categoria}`}>{alerta.msg} </div>) : null}\r\n               <div className =\"contenedor-form sombra-dark\">\r\n                   <h1>Obtener una cuenta</h1>\r\n                   <form\r\n                        onSubmit={onSubmit}\r\n                   ><div className=\"campo-form\">\r\n                           <label htmlFor=\"nombre\">Nombre</label>\r\n                           <input \r\n                                type=\"text\"\r\n                                id=\"nombre\"\r\n                                name=\"nombre\"\r\n                                placeholder=\"Tu nombre\"\r\n                                value={nombre}\r\n                                onChange={onChange}\r\n                            />\r\n                       </div>\r\n                       <div className=\"campo-form\">\r\n                           <label htmlFor=\"email\">Email</label>\r\n                           <input \r\n                                type=\"email\"\r\n                                id=\"email\"\r\n                                name=\"email\"\r\n                                placeholder=\"Tu Email\"\r\n                                value={email}\r\n                                onChange={onChange}\r\n                            />\r\n                       </div>\r\n                       <div className=\"campo-form\">\r\n                           <label htmlFor=\"email\">Password</label>\r\n                           <input \r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                name=\"password\"\r\n                                placeholder=\"Tu Password\"\r\n                                value={password}\r\n                                onChange={onChange}\r\n                            />\r\n                       </div>\r\n                       <div className=\"campo-form\">\r\n                           <label htmlFor=\"email\">Confirmar Password</label>\r\n                           <input \r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                name=\"confirmar\"\r\n                                placeholder=\"Repite tu Password\"\r\n                                value={confirmar}\r\n                                onChange={onChange}\r\n                            />\r\n                       </div>\r\n                       <div className =\"campo-form\">\r\n                           <input type=\"submit\" className=\"btn btn-primario btn-block\"\r\n                           value=\"Registrarme\" />\r\n                       </div>\r\n                   </form>\r\n\r\n                   <Link to={'/'} className=\"enlace-cuenta\">\r\n                       Volver a Iniciar Sesion\r\n                   </Link>\r\n               </div>\r\n\r\n           </div>\r\n    );\r\n}\r\n\r\nexport default NuevaCuenta;","import {createContext} from 'react';\r\n\r\nconst proyectoContext = createContext();\r\n\r\nexport default proyectoContext;","import React from 'react';\r\nimport {map} from \"lodash\";\r\nconst Tabla = (props) => {\r\n    const {datos, title} = props;\r\n    console.log(\"desde Tabla\", datos);\r\nreturn (\r\n    <div class=\"card\">\r\n    <div class=\"card-header border-0\">\r\n      <h3 class=\"card-title\">{title}</h3>\r\n      <div class=\"card-tools\">\r\n        <a href=\"#\" class=\"btn btn-tool btn-sm\">\r\n          <i class=\"fas fa-download\"></i>\r\n        </a>\r\n       \r\n      </div>\r\n    </div>\r\n    {title === \"Programas\" ? (\r\n    <div class=\"card-body table-responsive p-0\">\r\n      <table class=\"table table-striped table-valign-middle\">\r\n        <thead>\r\n        <tr>\r\n          <th>Nombre</th>\r\n          <th>Precio Base</th>\r\n          <th>Precio Base Plataforma</th> \r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        {datos.map((item,i) => <tr  key={i}>\r\n        <td>{item.name}</td>\r\n        <td >{item.priceBase}</td>\r\n        <td >{item.priceBasePlataforma}</td>   \r\n        </tr> )}\r\n        </tbody>\r\n      </table>\r\n\r\n    </div>\r\n    ): ( null) }\r\n     {title === \"Sedes\" ? (\r\n    <div class=\"card-body table-responsive p-0\">\r\n      <table class=\"table table-striped table-valign-middle\">\r\n        <thead>\r\n        <tr>\r\n          <th>Nombre</th>\r\n          <th>Comerce Code</th>\r\n          <th>Sede Info</th> \r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        {datos.map((item,i) => <tr  key={i}>\r\n        <td>{item.name}</td>\r\n        <td >{item.commerceCode}</td>\r\n        <td >boton</td>   \r\n        </tr> )}\r\n        </tbody>\r\n      </table>\r\n\r\n    </div>\r\n    ): ( null) }\r\n     {title === \"Regiones\" ? (\r\n    <div class=\"card-body table-responsive p-0\">\r\n      <table class=\"table table-striped table-valign-middle\">\r\n        <thead>\r\n        <tr>\r\n          <th>Nombre</th>\r\n          <th>Country_Id</th>\r\n          <th>Active</th> \r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        {datos.map((item,i) => <tr  key={i}>\r\n        <td>{item.name}</td>\r\n        <td >{item.countryId}</td>\r\n        <td >{item.active}</td>   \r\n        </tr> )}\r\n        </tbody>\r\n      </table>\r\n\r\n    </div>\r\n    ): ( null) }\r\n    {title === \"Ciudades\" ? (\r\n    <div class=\"card-body table-responsive p-0\">\r\n      <table class=\"table table-striped table-valign-middle\">\r\n        <thead>\r\n        <tr>\r\n          <th>Nombre</th>\r\n          <th>Region_ID</th>\r\n          <th>Active</th> \r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        {datos.map((item,i) => <tr  key={i}>\r\n        <td>{item.name}</td>\r\n        <td >{item.regionId}</td>\r\n        <td >{item.active}</td>   \r\n        </tr> )}\r\n        </tbody>\r\n      </table>\r\n\r\n    </div>\r\n    ): ( null) }\r\n    {title === \"Comunas\" ? (\r\n    <div class=\"card-body table-responsive p-0\">\r\n      <table class=\"table table-striped table-valign-middle\">\r\n        <thead>\r\n        <tr>\r\n          <th>Nombre</th>\r\n          <th>Region_ID</th>\r\n          <th>Active</th> \r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        {datos.map((item,i) => <tr  key={i}>\r\n        <td>{item.name}</td>\r\n        <td >{item.regionId}</td>\r\n        <td >{item.active}</td>   \r\n        </tr> )}\r\n        </tbody>\r\n      </table>\r\n\r\n    </div>\r\n    ): ( null) }\r\n    {title === \"Ramos\" ? (\r\n    <div class=\"card-body table-responsive p-0\">\r\n      <table class=\"table table-striped table-valign-middle\">\r\n        <thead>\r\n        <tr>\r\n          <th>ID</th>\r\n          <th>Ramos</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        {datos.map((item,i) => <tr  key={i}>\r\n        <td>{item.id}</td>\r\n        <td >{item.name}</td>\r\n        \r\n        </tr> )}\r\n        </tbody>\r\n      </table>\r\n\r\n    </div>\r\n    ): ( null) }\r\n  </div>\r\n)\r\n}\r\nexport default Tabla; ","import React, { Fragment, useState, useContext, useEffect } from \"react\";\r\nimport proyectoContext from \"../../context/proyectos/proyectoContext\";\r\nimport Tabla from \"../tabla/Tabla\";\r\nimport {size} from \"lodash\";\r\nconst fetch = require(\"node-fetch\");\r\nconst SERVER =  'http://qaerpdv.preupdv.cl';\r\nconst SERVER_PORT =  8090;\r\n\r\nconst NuevoProyecto = (props) => {\r\n  const axios = require('axios');\r\n  const {setOpcion} = props; \r\n  const [programas, guardarProgramas] = useState({});\r\n  const [sedes, guardarSedes] = useState({});\r\n  const [regiones,setRegiones] = useState({});\r\n  const [ciudades, setCiudades] = useState({});\r\n  const [comunas, setComunas] = useState({});\r\n  const [ramos, setRamos] = useState({});\r\n  useEffect(() => {\r\n    const obtenerProgramas = async () => {\r\n      const url = `${SERVER}:${SERVER_PORT}/v1/carro/programas`;\r\n      \r\n      \r\n      const response = await fetch(url,{\r\n        method:'GET',\r\n          headers : {\r\n              'Content-Type' : 'application/json',\r\n              \"Accept\": \"*/*\",\r\n              \"Cache-Control\": \"no-cache\",\r\n              \"Host\": `${url.replace('http://','').replace('https://','')}:8090`,\r\n              \"Content-Length\": \"746\",\r\n              \"Connection\": \"keep-alive\",\r\n              \r\n          },\r\n      \r\n      });\r\n      const programas = await response.json();\r\n      \r\n            console.log(\"cantidad de elementos \" , size(programas));\r\n            guardarProgramas(programas);\r\n          }\r\n          \r\n    \r\n    obtenerProgramas();\r\n    \r\n  }, [])\r\n  useEffect(() => {\r\n\r\n    const obtenerSedes = async () => {\r\n      const url = 'http://erpdv.preupdv.cl:8090/v1/carro/sedes';\r\n      const programas = await axios.get(url)\r\n            console.log(\"cantidad de elementos \" , size(programas.data));\r\n            guardarSedes(programas.data);\r\n    }\r\n    \r\n    obtenerSedes();\r\n\r\n    \r\n  }, [])\r\n  useEffect(() => {\r\n    const obtenerRegiones = async () => {\r\n      const url = 'http://erpdv.preupdv.cl:8090/v1/carro/regiones';\r\n      const programas = await axios.get(url)\r\n            console.log(\"cantidad de elementos \" , size(programas.data));\r\n            setRegiones(programas.data);\r\n         \r\n    }\r\n    obtenerRegiones();\r\n   \r\n  }, [])\r\n  useEffect(() => {\r\n    const obtenerCiudades = async () => {\r\n      const url = 'http://erpdv.preupdv.cl:8090/v1/carro/ciudad/all';\r\n      const programas = await axios.get(url)\r\n            console.log(\"cantidad de elementos \" , size(programas.data));\r\n            setCiudades(programas.data);\r\n          }\r\n       \r\n    \r\n    obtenerCiudades();\r\n   \r\n    \r\n  }, [])\r\n  useEffect(() => {\r\n    const obtenerRamos = async () => {\r\n      const url = 'http://erpdv.preupdv.cl:8090/v1/carro/ramos';\r\n      const programas = await axios.get(url);\r\n            console.log(\"cantidad de elementos \" , size(programas.data));\r\n            setRamos(programas.data);\r\n          }\r\n          \r\n    \r\n    obtenerRamos();\r\n    \r\n  }, [])\r\n  useEffect(() => {\r\n    const obtenerComuna = async () => {\r\n      const url = 'http://erpdv.preupdv.cl:8090/v1/carro/comuna/all';\r\n      const programas = await axios.get(url);\r\n            console.log(\"cantidad de elementos \" , size(programas.data));\r\n            setComunas(programas.data);\r\n          \r\n    }\r\n    obtenerComuna();\r\n    \r\n    \r\n  }, [])\r\n  \r\n  \r\n  //mostar formulario\r\n  \r\n  const onClickRegiones = () => {\r\n    //mostrarFormulario();\r\n    setOpcion(\r\n    <Tabla datos={regiones} title=\"Regiones\" />\r\n    );\r\n  };\r\n  const onClickCiudades = () => {\r\n    //mostrarFormulario();\r\n    setOpcion(\r\n    <Tabla datos={ciudades} title=\"Ciudades\" />\r\n    );\r\n  };\r\n  const onClickProgramas = () => {\r\n    //mostrarFormulario();\r\n    setOpcion(\r\n    <Tabla datos={programas} title=\"Programas\" />\r\n    );\r\n  };\r\n  const onClickSedes = () => {\r\n    //mostrarFormulario();\r\n    setOpcion(\r\n    <Tabla datos={sedes} title=\"Sedes\" />\r\n    );\r\n  };\r\n  const onClickRamos = () => {\r\n    //mostrarFormulario();\r\n    setOpcion(\r\n    <Tabla datos={ramos} title=\"Ramos\" />\r\n    );\r\n  };\r\n  const onClickComunas = () => {\r\n    //mostrarFormulario();\r\n    setOpcion(\r\n    <Tabla datos={comunas} title=\"Comunas\" />\r\n    );\r\n  };\r\n  \r\n  \r\n\r\n  return (\r\n    <Fragment>\r\n       <button\r\n        type=\"button\"\r\n        className=\"btn btn-block btn-primario\"\r\n        onClick={onClickRegiones}\r\n      >\r\n        Regiones {size(regiones)}\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-block btn-primario\"\r\n        onClick={onClickCiudades}\r\n      >\r\n        Ciudades {size(ciudades)}\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-block btn-primario\"\r\n        onClick={onClickComunas}\r\n      >\r\n        Comunas {size(comunas)}\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-block btn-primario\"\r\n        onClick={onClickProgramas}\r\n      >\r\n        Programas {size(programas)}\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-block btn-primario\"\r\n        onClick={onClickSedes}\r\n      >\r\n        Sedes {size(sedes)}\r\n      </button>\r\n     \r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-block btn-primario\"\r\n        onClick={onClickRamos}\r\n      >\r\n        Ramos {size(ramos)}\r\n      </button>\r\n      \r\n       \r\n      \r\n      \r\n      \r\n    \r\n      \r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default NuevoProyecto;\r\n","import  { createContext } from 'react';\r\n\r\nconst tareaContext = createContext();\r\n\r\nexport default tareaContext;","import React from 'react';\r\nimport logo from './logo.png';\r\nimport NuevoProyecto from '../proyectos/NuevoProyecto'\r\nimport ListadoProyectos from '../proyectos/ListadoProyectos';\r\n\r\nconst Sidebar = (props) => {\r\n    const {setOpcion} = props; \r\n    \r\n    return ( \r\n\r\n        <aside>\r\n            <a href='https://www.preuniversitariopedrodevaldivia.cl/'>\r\n            <img src={logo} className= \"logo-app\" alt=\"logo\" />\r\n                   </a>\r\n        \r\n            <h1>DASHBOARD<span></span></h1>\r\n            <NuevoProyecto setOpcion={setOpcion}/>\r\n            \r\n        </aside>\r\n     );\r\n}\r\n \r\nexport default Sidebar;","import React,{useContext,useEffect} from 'react';\r\nimport AuthContext from '../../context/autenticacion/authContext';\r\nconst Barra = () => {\r\n      //Extraer la informacion de autenticacion\r\n      const authContext = useContext(AuthContext);\r\n      const {usuario,usuarioAutenticado, cerrarSesion} = authContext;\r\n      useEffect(() => {\r\n          usuarioAutenticado();\r\n          // eslint-disable-next-line\r\n      }, []);\r\n    return (  \r\n        <header className=\"app-header\">\r\n           {usuario ?  <p className=\"nombre-usuario\">Hola <span>{usuario.nombre}</span></p> : null}\r\n            <nav className=\"nav-principal\">\r\n               <button\r\n                    className=\"btn btn-blank cerrar-sesion\"\r\n                    onClick={() => cerrarSesion() }\r\n                >Cerrar Sesión</button>\r\n            </nav>\r\n        </header>\r\n    );\r\n}\r\n \r\nexport default Barra;","import React,{useContext,useState,useEffect} from 'react';\r\nimport proyectoContext from '../../context/proyectos/proyectoContext';\r\nimport tareaContext from '../../context/tareas/tareaContext';\r\n\r\nconst FormTarea = () => {\r\n//Extraer si un proyecto esta activo\r\nconst proyectosContext = useContext(proyectoContext);\r\nconst {proyecto} = proyectosContext;\r\nconst tareasContext = useContext(tareaContext);\r\nconst {tareaseleccionada, errortarea, agregarTarea,validarTarea,obtenerTareas,actualizarTarea,limpiarTarea} = tareasContext;\r\n//effect que detecta si hay una tarea seleccionada\r\n\r\nuseEffect(() => {\r\n    if(tareaseleccionada !== null){\r\n        guardarTarea(tareaseleccionada);\r\n    } else {\r\n        guardarTarea({\r\n            nombre: '',\r\n            \r\n            \r\n        })\r\n    }\r\n}, [tareaseleccionada]);\r\n\r\n//state dle formulario\r\n\r\nconst[tarea,guardarTarea] = useState({\r\n\r\n    producto: '',\r\n            nombre: '',\r\n            \r\n})\r\n//extrae el nombre del proyecto\r\n\r\nconst {nombre} = tarea;\r\nconst {comentario} = tarea; \r\n //si no hay proyecto selecionado \r\n if(!proyecto) return null;\r\n\r\n //array para destructuring y extrae el proyecto actual\r\n const [proyectoActual] = proyecto;\r\n\r\n //leer los valores del formulario\r\n\r\n const hadleChange = e => {\r\n     guardarTarea({\r\n         ...tarea,\r\n         [e.target.name] : e.target.value\r\n     })\r\n }\r\n\r\n const onSubmit = e => {\r\n     e.preventDefault();\r\n     //validar\r\n        if(nombre.trim() === ''){\r\n            validarTarea();\r\n            return;\r\n        }\r\n     \r\n     //revisar si es edicion o nueva tarea \r\n     if(tareaseleccionada === null){\r\n         //agregar la nueva tarea al state de tareas\r\n            tarea.proyecto = proyectoActual._id;\r\n            //tarea.estado= false;\r\n            agregarTarea(tarea);\r\n     } else {\r\n         // actualizar tarea existe \r\n         actualizarTarea(tarea);\r\n         //elimina tarea seleccionada del state\r\n         limpiarTarea();\r\n     }\r\n    \r\n\r\n     //obtener y filtrar las tareas del proyecto actual\r\n     obtenerTareas(proyectoActual.id);\r\n     //reiniciar el form \r\n     guardarTarea({\r\n        nombre: '',\r\n        \r\n\r\n     })\r\n }\r\n    return (  \r\n        <div className=\"formulario\">            \r\n        <form onSubmit= {onSubmit}>\r\n            <div className=\"contenedor-input\">\r\n                <input \r\n                    type=\"text\"\r\n                    className=\"input-text\"\r\n                    placeholder=\"Acciones...\"\r\n                    name=\"nombre\"\r\n                    value= {nombre}\r\n                    onChange = {hadleChange}\r\n                    />\r\n            </div>\r\n            \r\n            \r\n            <div className=\"contenedor-input\">\r\n                <input \r\n                    type=\"submit\"\r\n                    className=\"btn btn-primario btn-submit btn-block\"\r\n                    value={tareaseleccionada ? 'Editar Pedido' : 'Agregar Pedido'}\r\n                    />\r\n\r\n            </div>\r\n        </form>\r\n        {errortarea ? <p className= \"mensaje error\">El nombre del local es obligatorio</p> : null }\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default FormTarea;","import React,{useContext,useEffect, useState} from 'react';\r\nimport Sidebar from '../layout/Sidebar';\r\nimport Barra from '../layout/Barra';\r\nimport FormTarea from '../tareas/FormTarea';\r\nimport ListadoTareas from '../tareas/ListadoTareas';\r\nimport AuthContext from '../../context/autenticacion/authContext';\r\nconst Proyectos = () => {\r\n\r\n    //Extraer la informacion de autenticacion\r\n    const authContext = useContext(AuthContext);\r\n    const {usuarioAutenticado} = authContext;\r\n    const [opcion, setOpcion] = useState(undefined);\r\n    useEffect(() => {\r\n        usuarioAutenticado();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n    return (  \r\n\r\n           <div className=\"contenedor-app\">\r\n              <Sidebar setOpcion={setOpcion}/> \r\n\r\n               <div className =\"seccion-principal\">\r\n                   <Barra />\r\n                   <main>\r\n                   <FormTarea />\r\n                       <div className=\"contenedor-tareas\">\r\n                           {opcion}\r\n                       \r\n                       </div>\r\n                   </main>\r\n               </div>\r\n           </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Proyectos;","import React from 'react';\r\n\r\n\r\nfunction Header({titulo}) {\r\n\r\n    return(\r\n        \r\n        <h1 className=\"encabezado\">\r\n            {titulo}</h1>\r\n     \r\n    )\r\n}\r\n\r\nexport default Header;","import {FORMULARIO_PROYECTO,OBTENER_PROYECTOS,\r\n       AGREGAR_PROYECTO, VALIDAR_FORMULARIO,\r\n       PROYECTO_ERROR,\r\n       PROYECTO_ACTUAL,ELIMINAR_PROYECTO} from '../../types';\r\n\r\nexport default (state,action) => {\r\n    switch(action.type){\r\n\r\n        case FORMULARIO_PROYECTO:\r\n            return {\r\n                ...state,\r\n                formulario: true\r\n            }\r\n        case OBTENER_PROYECTOS:\r\n            return {\r\n                ...state,\r\n                proyectos: action.payload\r\n            }\r\n            case AGREGAR_PROYECTO:\r\n                return{\r\n                    ...state,\r\n                    proyectos:[...state.proyectos,action.payload],\r\n                    formulario: false,\r\n                    errorformulario: false\r\n                }\r\n            case VALIDAR_FORMULARIO:\r\n                return{\r\n                    ...state,\r\n                    errorformulario: true\r\n                }\r\n            case PROYECTO_ACTUAL:\r\n                return{\r\n                    ...state,\r\n                    proyecto: state.proyectos.filter(proyecto => proyecto._id === action.payload)\r\n                }\r\n            case ELIMINAR_PROYECTO:\r\n                return{\r\n                    ...state,\r\n                    proyectos: state.proyectos.filter(proyecto => proyecto._id !== action.payload),\r\n                    proyecto: null\r\n                }\r\n            case PROYECTO_ERROR: \r\n                return{\r\n                    ...state,\r\n                    mensaje: action.payload\r\n                }\r\n        default:\r\n            return state;\r\n    }\r\n}","export const FORMULARIO_PROYECTO = 'FORMULARIO_PROYECTO';\r\nexport const OBTENER_PROYECTOS = 'OBTENER_PROYECTOS';\r\nexport const AGREGAR_PROYECTO = 'AGREGAR_PROYECTO';\r\nexport const VALIDAR_FORMULARIO = 'VALIDAR_FORMULARIO';\r\nexport const PROYECTO_ACTUAL = 'PROYECTO_ACTUAL';\r\nexport const ELIMINAR_PROYECTO = 'ELIMINAR_PROYECTO';\r\nexport const PROYECTO_ERROR = 'PROYECTO_ERROR';\r\n\r\nexport const TAREAS_PROYECTO = 'TAREAS_PROYECTO';\r\nexport const AGREGAR_TAREA = 'AGREGAR_TAREA';\r\nexport const VALIDAR_TAREA = 'VALIDAR_TAREA';\r\nexport const ELIMINAR_TAREA = 'ELIMINAR_TAREA';\r\n\r\nexport const TAREA_ACTUAL = 'TAREA_ACTUAL';\r\nexport const ACTUALIZAR_TAREA = 'ACTUALIZAR_TAREA';\r\nexport const LIMPIAR_TAREA = 'LIMPIAR_TAREA';\r\n\r\nexport const MOSTRAR_ALERTA = 'MOSTRAR_ALERTA';\r\nexport const OCULTAR_ALERTA = 'OCULTAR_ALERTA';\r\n\r\nexport const REGISTRO_EXITOSO = 'REGISTRO_EXITOSO';\r\nexport const REGISTRO_ERROR = 'REGISTRO_ERROR';\r\nexport const OBTENER_USUARIO = 'OBTENER_USUARIO';\r\nexport const LOGIN_EXITOSO = 'LOGIN_EXITOSO';\r\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\r\nexport const CERRAR_SESION = 'CERRAR_SESION';","import axios from 'axios';\r\n\r\nconst clienteAxios = axios.create({\r\n\r\n    baseURL: process.env.REACT_APP_BACKEND_URL\r\n});\r\n\r\nexport default clienteAxios;","import React, {useReducer} from 'react';\r\n//import {v4 as uuid} from 'uuid';\r\nimport proyectoContext from './proyectoContext';\r\nimport proyectoReducer from './proyectoReducer';\r\nimport {FORMULARIO_PROYECTO,\r\n        OBTENER_PROYECTOS,\r\n        AGREGAR_PROYECTO,\r\n        VALIDAR_FORMULARIO,\r\n        PROYECTO_ACTUAL,\r\n        ELIMINAR_PROYECTO,\r\n        PROYECTO_ERROR\r\n    } from '../../types';\r\nimport clienteAxios from '../../config/axios';\r\n\r\n\r\nconst ProyectoState = props => {\r\n/*\r\n    const proyectos = [\r\n        {id:1, nombre: 'Estudio1'},\r\n        {id:2, nombre: 'MASTER CH 10'},\r\n        {id:3, nombre: 'TOM'}\r\n    ]*/\r\n    const initialState = {\r\n         proyectos : [\r\n            \r\n        ],\r\n        formulario : false,\r\n        errorformulario: false,\r\n        proyecto: null,\r\n        mensaje: null\r\n    }\r\n\r\n    const [state, dispatch] = useReducer(proyectoReducer, initialState)\r\n    //serie de funciones para el CRUD\r\n    const mostrarFormulario = () => {\r\n        dispatch({\r\n            type: FORMULARIO_PROYECTO\r\n        })\r\n    }\r\n\r\n    //obtner proyectos \r\n    const obtenerProyectos= async () => {\r\n        try {\r\n            const resultado = await clienteAxios.get('/api/proyectos');\r\n            dispatch({\r\n                type: OBTENER_PROYECTOS,\r\n                payload: resultado.data.proyectos\r\n            })\r\n        } catch (error) {\r\n            const alerta= {\r\n                msg: 'Hubo un error',\r\n                categoria: 'alerta-error'\r\n            }\r\n            dispatch({\r\n                type: PROYECTO_ERROR,\r\n                payload: alerta\r\n            })\r\n        }\r\n        \r\n    }\r\n    //Agregar nuevo Proyecto\r\n    const agregarProyecto = async proyecto => {\r\n       /* proyecto.id = uuid();\r\n        \r\n        */\r\n        try {\r\n            const resultado = await clienteAxios.post('/api/proyectos', proyecto);\r\n            console.log(resultado);\r\n            //INsertar el proyecto en el state \r\n            dispatch({\r\n                type: AGREGAR_PROYECTO,\r\n                payload: resultado.data\r\n            })\r\n        } catch (error) {\r\n            const alerta= {\r\n                msg: 'Hubo un error',\r\n                categoria: 'alerta-error'\r\n            }\r\n            dispatch({\r\n                type: PROYECTO_ERROR,\r\n                payload: alerta\r\n            })\r\n        }\r\n    }\r\n    //VALIDAR EL FORMULARIO\r\n    const mostrarError = () => {\r\n        dispatch({\r\n            type: VALIDAR_FORMULARIO\r\n        })\r\n    }\r\n    //selecciona el proyecto que el usuario dio click\r\n    const proyectoActual= proyectoId => \r\n    {\r\n        dispatch({\r\n            type: PROYECTO_ACTUAL,\r\n            payload: proyectoId\r\n        })\r\n    }\r\n    //Eliminar un proyecto\r\n    const eliminarProyecto = async proyectoId => {\r\n        try {\r\n            await clienteAxios.delete(`/api/proyectos/${proyectoId}`);\r\n            dispatch({\r\n                type: ELIMINAR_PROYECTO,\r\n                payload: proyectoId\r\n            })\r\n            \r\n        } catch (error) {\r\n            const alerta= {\r\n                msg: 'Hubo un error',\r\n                categoria: 'alerta-error'\r\n            }\r\n            dispatch({\r\n                type: PROYECTO_ERROR,\r\n                payload: alerta\r\n            })\r\n        }\r\n        \r\n    }\r\n    return(\r\n        <proyectoContext.Provider\r\n        value={{\r\n            proyectos: state.proyectos,\r\n            formulario: state.formulario,\r\n            errorformulario: state.errorformulario,\r\n            proyecto: state.proyecto,\r\n            mensaje: state.mensaje,\r\n            mostrarFormulario,\r\n            obtenerProyectos,\r\n            agregarProyecto,\r\n            mostrarError,\r\n            proyectoActual,\r\n            eliminarProyecto\r\n        }}>\r\n            {props.children}\r\n        </proyectoContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ProyectoState;","import {TAREAS_PROYECTO,AGREGAR_TAREA,\r\n    VALIDAR_TAREA, ELIMINAR_TAREA,\r\n    TAREA_ACTUAL,\r\n    ACTUALIZAR_TAREA,LIMPIAR_TAREA\r\n\r\n} from '../../types';\r\n\r\nexport default (state,action) => {\r\n    switch(action.type){\r\n        case TAREAS_PROYECTO: \r\n            return{\r\n                ...state,\r\n                tareasproyecto: action.payload\r\n            }\r\n        case AGREGAR_TAREA:\r\n            return{\r\n                ...state,\r\n                tareasproyecto: [ action.payload,...state.tareasproyecto],\r\n                errortarea: false\r\n            }\r\n        case VALIDAR_TAREA:\r\n            return{\r\n                ...state,\r\n                errortarea: true\r\n            }\r\n        case ELIMINAR_TAREA:\r\n            return{\r\n                ...state,\r\n                tareasproyecto: state.tareasproyecto.filter(tarea => tarea._id !== action.payload)\r\n            }\r\n        case ACTUALIZAR_TAREA:\r\n            return{\r\n                ...state,\r\n                tareasproyecto: state.tareasproyecto.map(tarea => tarea._id === \r\n                    action.payload._id ? action.payload : tarea)\r\n            }\r\n        case TAREA_ACTUAL:\r\n            return{\r\n                ...state,\r\n                tareaseleccionada: action.payload   \r\n            }\r\n        case LIMPIAR_TAREA:\r\n            return{\r\n                ...state,\r\n                tareaseleccionada : null\r\n            }\r\n        \r\n        default: \r\n            return state;\r\n    }\r\n}","import React, {useReducer} from 'react';\r\nimport TareaContext from './tareaContext';\r\nimport TareaReducer from './tareaReducer';\r\nimport {TAREAS_PROYECTO,AGREGAR_TAREA,\r\n        VALIDAR_TAREA,ELIMINAR_TAREA,\r\n        TAREA_ACTUAL,\r\n        ACTUALIZAR_TAREA, LIMPIAR_TAREA\r\n\r\n} from '../../types';\r\n//import {v4 as uuid} from 'uuid';\r\nimport clienteAxios from '../../config/axios'\r\nconst TareaState = props => {\r\n\r\n    const initialState = {\r\n      /*  tareas: [\r\n            {id:1, nombre: 'Director', estado: true, proyectoId: 1},\r\n            {id:2,nombre: 'Camara', estado: true, proyectoId: 2},\r\n            {id:3,nombre: 'Tom', estado: true, proyectoId: 3},\r\n            {id:4,nombre: 'Asistente', estado: false, proyectoId: 4}\r\n        ],*/\r\n        tareasproyecto: [],\r\n        errortarea: false,\r\n        tareaseleccionada : null\r\n    }\r\n\r\n\r\n    //crear dispatch y state\r\n\r\n    const [state, dispatch] = useReducer(TareaReducer, initialState);\r\n    // Crear las Funciones\r\n\r\n    //Obtener las tareas de un proyecto\r\n\r\n    const obtenerTareas = async proyecto => {\r\n        try {\r\n            const resultado = await clienteAxios.get('/api/tareas',{params: {proyecto}});\r\n            dispatch({\r\n                type: TAREAS_PROYECTO,\r\n                payload: resultado.data.tareas\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    //agregar una tarea al proyecto\r\n    const agregarTarea = async tarea => {\r\n       // tarea.id = uuid();\r\n       try {\r\n           const resultado = await clienteAxios.post('/api/tareas',tarea);\r\n        dispatch({\r\n            type: AGREGAR_TAREA,\r\n            payload: resultado.data.tarea\r\n        })\r\n       } catch (error) {\r\n           console.log(error);\r\n       }\r\n        \r\n    }\r\n\r\n    //valida y muesta un error\r\n    const validarTarea = () => {\r\n        dispatch({\r\n            type: VALIDAR_TAREA\r\n        })\r\n    }\r\n    //eliminar tarea por id \r\n    const eliminarTarea = async (id,proyecto) => {\r\n        try {\r\n            await clienteAxios.delete(`/api/tareas/${id}`,{params:{proyecto}});\r\n            dispatch({\r\n                type: ELIMINAR_TAREA,\r\n                payload: id\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n     //edita o modifica una tarea\r\n    const actualizarTarea = async tarea => {\r\n        \r\n        try {\r\n            const resultado = await clienteAxios.put(`/api/tareas/${tarea._id}`,tarea);\r\n            \r\n            dispatch({\r\n                type: ACTUALIZAR_TAREA,\r\n                payload: resultado.data.tarea\r\n        }) \r\n        } catch (error) {\r\n            console.log(error);\r\n        }  \r\n}\r\n    // extrae la tarea para edicion\r\n    const guardarTareaActual = tarea => {\r\n        dispatch({\r\n            type: TAREA_ACTUAL,\r\n            payload: tarea\r\n        })\r\n    }\r\n\r\n  \r\n    //elimina la tarea seleccionada\r\n    const limpiarTarea = () => {\r\n        dispatch({\r\n            type: LIMPIAR_TAREA\r\n        })\r\n    }\r\n    return(\r\n        <TareaContext.Provider\r\n            value={{\r\n              //  tareas: state.tareas,\r\n                tareasproyecto : state.tareasproyecto,\r\n                errortarea: state.errortarea,\r\n                tareaseleccionada: state.tareaseleccionada,\r\n                obtenerTareas,\r\n                agregarTarea,\r\n                validarTarea,\r\n                eliminarTarea,\r\n                guardarTareaActual,\r\n                actualizarTarea,\r\n                limpiarTarea\r\n            }}\r\n        >\r\n            {props.children}\r\n        </TareaContext.Provider>\r\n    )\r\n}\r\n\r\nexport default TareaState;\r\n\r\n","import {MOSTRAR_ALERTA, OCULTAR_ALERTA} from'../../types';\r\n\r\nexport default (state, action) => {\r\n    switch(action.type){\r\n        case MOSTRAR_ALERTA:\r\n                return{\r\n                    alerta: action.payload\r\n                }\r\n        case OCULTAR_ALERTA:\r\n            return {\r\n                alerta: null\r\n            }\r\n            \r\n        default:\r\n                return state;\r\n    }\r\n}","import React, {useReducer} from 'react';\r\nimport {MOSTRAR_ALERTA, OCULTAR_ALERTA} from '../../types';\r\nimport alertaReducer from './alertaReducer';\r\nimport alertaContext from './alertaContext';\r\n\r\nconst AlertaState = props => {\r\n    const initialState = {\r\n        alerta: null\r\n    }\r\n    const [state, dispatch] = useReducer(alertaReducer, initialState);\r\n\r\n    //funciones \r\n\r\n    const mostrarAlerta = (msg, categoria) => {\r\n        dispatch({\r\n            type: MOSTRAR_ALERTA,\r\n            payload: {\r\n                msg,\r\n                categoria\r\n            }\r\n        });\r\n        setTimeout(() => {\r\n            dispatch({\r\n                type: OCULTAR_ALERTA\r\n            })\r\n        }, 5000);\r\n    }\r\n    return(\r\n        <alertaContext.Provider\r\n         value={{\r\n             alerta: state.alerta,\r\n             mostrarAlerta\r\n         }}\r\n        >\r\n            {props.children}\r\n\r\n        </alertaContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AlertaState;","import {REGISTRO_ERROR,REGISTRO_EXITOSO,\r\n        OBTENER_USUARIO,LOGIN_ERROR,\r\n        LOGIN_EXITOSO,CERRAR_SESION\r\n} from'../../types';\r\n\r\nexport default (state, action) => {\r\n    switch(action.type){\r\n       case REGISTRO_EXITOSO:\r\n       case LOGIN_EXITOSO:\r\n           localStorage.setItem('token',action.payload.token);\r\n            return{\r\n                ...state,\r\n                autenticado: true,\r\n                mensaje: null,\r\n                cargando: false\r\n            }\r\n        case OBTENER_USUARIO:\r\n            return{\r\n                ...state,\r\n                autenticado: true,\r\n                usuario: action.payload,\r\n                cargando: false\r\n            }\r\n        case CERRAR_SESION:\r\n        case LOGIN_ERROR:\r\n        case REGISTRO_ERROR:\r\n            localStorage.removeItem('token');\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                usuario: null,\r\n                autenticado: false,\r\n                mensaje: action.payload,\r\n                cargando: false\r\n            }\r\n       case REGISTRO_ERROR:\r\n            return{\r\n                ...state,\r\n                token: null,\r\n                mensaje: action.payload\r\n            }\r\n\r\n        default:\r\n                return state;\r\n    }\r\n}","import clienteAxios from './axios';\r\n\r\nconst tokenAuth = token => {\r\n    if(token){\r\n        clienteAxios.defaults.headers.common['x-auth-token'] = token;\r\n    } else {\r\n        delete clienteAxios.defaults.headers.common['x-auth-token'];\r\n    }\r\n}\r\n\r\nexport default tokenAuth;","import React, {useReducer} from 'react';\r\nimport {REGISTRO_ERROR,REGISTRO_EXITOSO,\r\n    OBTENER_USUARIO,LOGIN_ERROR,\r\n    LOGIN_EXITOSO,CERRAR_SESION\r\n} from'../../types';\r\nimport authReducer from './authReducer';\r\nimport AuthContext from './authContext';\r\nimport clienteAxios from '../../config/axios';\r\nimport tokenAuth from '../../config/tokenAuth';\r\n\r\nconst AuthState = props => {\r\n    const initialState = {\r\n        token: localStorage.getItem('token'),\r\n        autenticado: null,\r\n        usuario: null,\r\n        mensaje: null,\r\n        cargando: true\r\n    }\r\n    const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n    const registrarUsuario = async datos => {\r\n        try {\r\n            const respuesta = await clienteAxios.post('/api/usuarios',datos);\r\n            console.log(respuesta.data);\r\n            dispatch({\r\n                type: REGISTRO_EXITOSO,\r\n                payload: respuesta.data\r\n            })\r\n\r\n            //obtener el usuario\r\n            usuarioAutenticado();\r\n        } catch (error) {\r\n            //console.log(error.response.data.msg);\r\n             const alerta = {\r\n                 msg: error.response.data.msg,\r\n                 categoria: 'alerta-error'\r\n             }\r\n            dispatch({\r\n                type: REGISTRO_ERROR,\r\n                payload: alerta\r\n            })\r\n        }\r\n    }\r\n    //retorna el usuario autenticado\r\n    const usuarioAutenticado = async () => {\r\n        const token = localStorage.getItem('token');\r\n        if(token){\r\n            tokenAuth(token);\r\n        }\r\n        try {\r\n            const respuesta = await clienteAxios.get('/api/auth');\r\n            //console.log(respuesta);\r\n            dispatch({\r\n                type: OBTENER_USUARIO,\r\n                payload: respuesta.data.usuario\r\n            })\r\n        } catch (error) {\r\n            console.log(error.response);\r\n            dispatch({\r\n                type: LOGIN_ERROR\r\n            })\r\n        }\r\n    }\r\n\r\n    //cuando el usuario inicia sesion \r\n\r\n    const iniciarSesion = async datos => {\r\n        try {\r\n            const respuesta = await clienteAxios.post('/api/auth',datos);\r\n            dispatch({\r\n                type:LOGIN_EXITOSO,\r\n                payload: respuesta.data\r\n            });\r\n            //obtener el usuario\r\n            usuarioAutenticado();\r\n        } catch (error) {\r\n            const alerta = {\r\n                msg: error.response.data.msg,\r\n                categoria: 'alerta-error'\r\n            }\r\n           dispatch({\r\n               type: LOGIN_ERROR,\r\n               payload: alerta\r\n           })\r\n        }\r\n    }\r\n    //Cierra la sesion del usuario\r\n    const cerrarSesion = () => {\r\n        dispatch({\r\n            type: CERRAR_SESION\r\n        })\r\n    }\r\n    return(\r\n        <AuthContext.Provider\r\n        value={{\r\n            token: state.token,\r\n            autenticado: state.autenticado,\r\n            usuario: state.usuario,\r\n            mensaje: state.mensaje,\r\n            cargando: state.cargando,\r\n            registrarUsuario,\r\n            iniciarSesion,\r\n            usuarioAutenticado,\r\n            cerrarSesion\r\n        }}\r\n        >\r\n\r\n        {props.children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AuthState;","import React,{useContext, useEffect} from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport AuthContext from '../../context/autenticacion/authContext';\r\n\r\n\r\nconst RutaPrivada = ({component: Component, ...props}) => {\r\n    const authContext= useContext(AuthContext);\r\n    const {autenticado,cargando, usuarioAutenticado}= authContext;\r\n    useEffect(() => {\r\n        \r\n        usuarioAutenticado();\r\n        // eslint-disable-next-line\r\n    }, [])\r\n    return ( \r\n        <Route {...props} render={props => !autenticado && !cargando ? (\r\n            <Redirect to=\"/\" />\r\n        ) : (\r\n            <Component {...props}/>\r\n        )}\r\n            />\r\n     );\r\n}\r\n \r\nexport default RutaPrivada;","import React, { Fragment , useState} from 'react';\r\nimport {BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport Login from './components/auth/Login';\r\nimport NuevaCuenta from './components/auth/NuevaCuenta';\r\nimport Proyectos from './components/proyectos/Proyectos';\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\nimport Producto from './components/Producto';\r\nimport ProyectoState from './context/proyectos/proyectoState';\r\nimport TareaState from './context/tareas/tareaState';\r\nimport AlertaState from './context/alertas/alertaState';\r\nimport AuthState from './context/autenticacion/authState';\r\nimport tokenAuth from './config/tokenAuth';\r\nimport RutaPrivada from './components/rutas/RutaPrivada';\r\n//Revisar si tenemos un token\r\nconst token = localStorage.getItem('token');\r\nif(token){\r\n    tokenAuth(token);\r\n}\r\nfunction App() {\r\n\r\n    \r\n    //Obtener la fe<cha\r\n\r\n    const fecha = new Date().getFullYear();\r\n\r\n    console.log(process.env.REACT_APP_BACKEND_URL);\r\n    return ( <ProyectoState>\r\n        <TareaState>\r\n        <AlertaState>\r\n            <AuthState>\r\n            <Router>\r\n                <Switch>\r\n                    <Route exact path=\"/\" component = {Login} />\r\n                    <Route exact path=\"/nueva-cuenta\" component =\r\n                     {NuevaCuenta} />\r\n                    <RutaPrivada exact path=\"/proyecto\" component = \r\n                     {Proyectos} />\r\n                </Switch>\r\n            </Router>\r\n            </AuthState>\r\n            </AlertaState>\r\n            </TareaState>\r\n            </ProyectoState>\r\n            \r\n    );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\nimport './css/fontawesome-free/css/all.min.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}