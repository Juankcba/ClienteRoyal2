{"version":3,"sources":["components/layout/logo.png","context/alertas/alertaContext.js","context/autenticacion/authContext.js","components/auth/Login.js","components/auth/NuevaCuenta.js","context/proyectos/proyectoContext.js","components/proyectos/NuevoProyecto.js","context/tareas/tareaContext.js","components/proyectos/Proyecto.js","components/proyectos/ListadoProyectos.js","components/layout/Sidebar.js","components/layout/Barra.js","components/tareas/FormTarea.js","components/tareas/Tarea.js","components/tareas/ListadoTareas.js","components/proyectos/Proyectos.js","components/Header.jsx","context/proyectos/proyectoReducer.js","types/index.js","config/axios.js","context/proyectos/proyectoState.js","context/tareas/tareaReducer.js","context/tareas/tareaState.js","context/alertas/alertaReducer.js","context/alertas/alertaState.js","context/autenticacion/authReducer.js","config/tokenAuth.js","context/autenticacion/authState.js","components/rutas/RutaPrivada.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","alertaContext","createContext","AuthContext","Login","props","useContext","AlertaContext","alerta","mostrarAlerta","authContext","mensaje","autenticado","iniciarSesion","useEffect","history","push","msg","categoria","useState","email","password","usuario","guardarUsuario","onChange","e","target","name","value","className","onSubmit","preventDefault","trim","htmlFor","type","id","placeholder","to","NuevaCuenta","registrarUsuario","nombre","confirmar","length","proyectoContext","NuevoProyecto","proyectosContext","formulario","errorformulario","mostrarFormulario","agregarProyecto","mostrarError","proyecto","guardarProyecto","onClick","tareaContext","Proyecto","proyectoActual","obtenerTareas","_id","ListadoProyectos","proyectos","obtenerProyectos","TransitionGroup","map","CSSTransition","key","timeout","classNames","Sidebar","src","logo","alt","Barra","usuarioAutenticado","cerrarSesion","FormTarea","tareasContext","tareaseleccionada","errortarea","agregarTarea","validarTarea","actualizarTarea","limpiarTarea","guardarTarea","producto","tarea","comentario","Tarea","eliminarTarea","guardarTareaActual","cambiarEstado","estado","seleccionarTarea","ListadoTareas","eliminarProyecto","tareasproyecto","Proyectos","Header","state","action","payload","filter","clienteAxios","axios","create","baseURL","process","ProyectoState","useReducer","proyectoReducer","dispatch","a","get","resultado","data","post","console","log","proyectoId","delete","Provider","children","TareaState","TareaReducer","params","tareas","put","AlertaState","alertaReducer","setTimeout","localStorage","setItem","token","cargando","removeItem","tokenAuth","defaults","headers","common","AuthState","initialState","getItem","authReducer","datos","respuesta","response","RutaPrivada","Component","component","render","App","ip","Date","getFullYear","exact","path","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.da24b960.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.8c3e09c4.png\";","import {createContext} from 'react';\r\n\r\nconst alertaContext = createContext();\r\n\r\nexport default alertaContext;","import {createContext} from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport default AuthContext;","import React, {useContext,useState,useEffect} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport AlertaContext from '../../context/alertas/alertaContext';\r\nimport AuthContext from '../../context/autenticacion/authContext';\r\n\r\nconst Login = (props) => {\r\n     // extraer los valores del context \r\n     const alertaContext = useContext(AlertaContext);\r\n     const {alerta, mostrarAlerta} = alertaContext;\r\n \r\n     const authContext = useContext(AuthContext);\r\n     const {mensaje, autenticado, iniciarSesion} = authContext;\r\n    //en caso que el password o el usuario no exista\r\n     useEffect(() =>{\r\n        if(autenticado){\r\n            props.history.push('/proyecto')\r\n        }\r\n        if(mensaje){\r\n            mostrarAlerta(mensaje.msg,mensaje.categoria);\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [mensaje, autenticado,props.history ]);\r\n    //state para iniciar sesion\r\n    const [usuario, guardarUsuario] = useState({\r\n        email:'',\r\n        password:''\r\n    });\r\n\r\n    const { email, password } = usuario;\r\n    const onChange = e => {\r\n        guardarUsuario({\r\n            ...usuario,\r\n            [e.target.name] : e.target.value\r\n        })\r\n\r\n    }\r\n\r\n    //cuando el usuario quiere iniciar sesion\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        //validar que no haya campos vacios\r\n\r\n        if(email.trim() === '' || password.trim() === ''){\r\n            mostrarAlerta('Todos los campos son obligatorios','alerta-error');\r\n        }\r\n        //Pasarlo al action\r\n        iniciarSesion({email,password});\r\n\r\n    }\r\n    return (  \r\n\r\n           <div className=\"form-usuario\">\r\n               {alerta ? (<div className={`alerta ${alerta.categoria}`}>{alerta.msg} </div>) : null}\r\n               <div className =\"contenedor-form sombra-dark\">\r\n                   <h1>Iniciar Sesión</h1>\r\n                   <form\r\n                        onSubmit={onSubmit}\r\n                   >\r\n                       <div className=\"campo-form\">\r\n                           <label htmlFor=\"email\">Email</label>\r\n                           <input \r\n                                type=\"email\"\r\n                                id=\"email\"\r\n                                name=\"email\"\r\n                                placeholder=\"Tu Email\"\r\n                                value={email}\r\n                                onChange={onChange}\r\n                            />\r\n                       </div>\r\n                       <div className=\"campo-form\">\r\n                           <label htmlFor=\"email\">Password</label>\r\n                           <input \r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                name=\"password\"\r\n                                placeholder=\"Tu Password\"\r\n                                value={password}\r\n                                onChange={onChange}\r\n                            />\r\n                       </div>\r\n                       <div className =\"campo-form\">\r\n                           <input type=\"submit\" className=\"btn btn-primario btn-block\"\r\n                           value=\"Iniciar Sesión\" />\r\n                       </div>\r\n                   </form>\r\n\r\n                   <Link to={'nueva-cuenta'} className=\"enlace-cuenta\">\r\n                       Obtener Cuenta\r\n                   </Link>\r\n               </div>\r\n\r\n           </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Login;","import React, {useState,useContext,useEffect}  from 'react';\r\n\r\nimport {Link} from 'react-router-dom';\r\nimport AlertaContext from '../../context/alertas/alertaContext';\r\nimport AuthContext from '../../context/autenticacion/authContext';\r\n\r\n\r\n\r\nconst NuevaCuenta = (props) => {\r\n\r\n    // extraer los valores del context \r\n    const alertaContext = useContext(AlertaContext);\r\n    const {alerta, mostrarAlerta} = alertaContext;\r\n\r\n    const authContext = useContext(AuthContext);\r\n    const {mensaje, autenticado, registrarUsuario} = authContext;\r\n\r\n    //en caso que haya un registro duplicado\r\n    useEffect(() =>{\r\n        if(autenticado){\r\n            props.history.push('/proyecto')\r\n        }\r\n        if(mensaje){\r\n            mostrarAlerta(mensaje.msg,mensaje.categoria);\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [mensaje, autenticado,props.history ]);\r\n    //state para iniciar sesion\r\n    const [usuario, guardarUsuario] = useState({\r\n        nombre:'',\r\n        email:'',\r\n        password:'',\r\n        confirmar:''\r\n    });\r\n\r\n    const {nombre, email, password, confirmar } = usuario;\r\n    const onChange = e => {\r\n        guardarUsuario({\r\n            ...usuario,\r\n            [e.target.name] : e.target.value\r\n        })\r\n\r\n    }\r\n\r\n    //cuando el usuario quiere iniciar sesion\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        //validar que no haya campos vacios\r\n        if(nombre.trim() === '' || email.trim() === '' ||\r\n        password.trim() === '' || confirmar.trim() === '' ){\r\n            mostrarAlerta('Todos los Campos son obligarios','alerta-error');\r\n            return;\r\n        }\r\n        //password minimo\r\n        if(password.length < 6){\r\n            mostrarAlerta('El password debe ser de al menos 6 caracteres','alerta-error');\r\n            return;\r\n        }\r\n        //los 2 password sean iguales\r\n        if(password !== confirmar){\r\n            mostrarAlerta('Los passwords no son iguales','alerta-error');\r\n            return;\r\n\r\n        }\r\n\r\n        //Pasarlo al action\r\n        registrarUsuario({nombre,email,password});\r\n\r\n    }\r\n    return (  \r\n\r\n           <div className=\"form-usuario\">\r\n               {alerta ? (<div className={`alerta ${alerta.categoria}`}>{alerta.msg} </div>) : null}\r\n               <div className =\"contenedor-form sombra-dark\">\r\n                   <h1>Obtener una cuenta</h1>\r\n                   <form\r\n                        onSubmit={onSubmit}\r\n                   ><div className=\"campo-form\">\r\n                           <label htmlFor=\"nombre\">Nombre</label>\r\n                           <input \r\n                                type=\"text\"\r\n                                id=\"nombre\"\r\n                                name=\"nombre\"\r\n                                placeholder=\"Tu nombre\"\r\n                                value={nombre}\r\n                                onChange={onChange}\r\n                            />\r\n                       </div>\r\n                       <div className=\"campo-form\">\r\n                           <label htmlFor=\"email\">Email</label>\r\n                           <input \r\n                                type=\"email\"\r\n                                id=\"email\"\r\n                                name=\"email\"\r\n                                placeholder=\"Tu Email\"\r\n                                value={email}\r\n                                onChange={onChange}\r\n                            />\r\n                       </div>\r\n                       <div className=\"campo-form\">\r\n                           <label htmlFor=\"email\">Password</label>\r\n                           <input \r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                name=\"password\"\r\n                                placeholder=\"Tu Password\"\r\n                                value={password}\r\n                                onChange={onChange}\r\n                            />\r\n                       </div>\r\n                       <div className=\"campo-form\">\r\n                           <label htmlFor=\"email\">Confirmar Password</label>\r\n                           <input \r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                name=\"confirmar\"\r\n                                placeholder=\"Repite tu Password\"\r\n                                value={confirmar}\r\n                                onChange={onChange}\r\n                            />\r\n                       </div>\r\n                       <div className =\"campo-form\">\r\n                           <input type=\"submit\" className=\"btn btn-primario btn-block\"\r\n                           value=\"Registrarme\" />\r\n                       </div>\r\n                   </form>\r\n\r\n                   <Link to={'Login'} className=\"enlace-cuenta\">\r\n                       Volver a Iniciar Sesion\r\n                   </Link>\r\n               </div>\r\n\r\n           </div>\r\n    );\r\n}\r\n\r\nexport default NuevaCuenta;","import {createContext} from 'react';\r\n\r\nconst proyectoContext = createContext();\r\n\r\nexport default proyectoContext;","import React,{Fragment,useState, useContext} from 'react';\r\nimport proyectoContext from '../../context/proyectos/proyectoContext';\r\n\r\nconst  NuevoProyecto = () => {\r\n\r\n    //obtener el state del formulario\r\n    const proyectosContext = useContext(proyectoContext);\r\n    const {formulario,errorformulario,mostrarFormulario, agregarProyecto,mostrarError} = proyectosContext;\r\n\r\n    //state para proyecto\r\n\r\n    const [proyecto, guardarProyecto] = useState({\r\n        nombre: ''\r\n    });\r\n\r\n    //Extraer nombre de proyecto\r\n    const {nombre} = proyecto;\r\n    \r\n    //lee los contenidos del input\r\n    const onChangeProyecto = e => {\r\n        guardarProyecto({\r\n            ...proyecto,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    //cuando el usuario envia el proyecto\r\n    const onSubmitProyecto = e => {\r\n        e.preventDefault();\r\n\r\n        //validar el proyecto\r\n        if(nombre === ''){\r\n            mostrarError();\r\n            return;\r\n        }\r\n        //agregar el state\r\n        agregarProyecto(proyecto);\r\n        //reinicar el form \r\n        guardarProyecto({\r\n            nombre: ''\r\n        })\r\n    }\r\n    //mostar formulario\r\n    const onClickFormulario = () => {\r\n        mostrarFormulario();\r\n    }\r\n\r\n    const onClickProducto = () => {\r\n       // mostrarProductos(); \r\n    }\r\n    return (  \r\n        <Fragment>\r\n        <button\r\n            type=\"button\"\r\n            className=\"btn btn-block btn-primario\"\r\n            onClick={ onClickFormulario}\r\n        >Nuevo Cliente</button>\r\n        <button\r\n            type=\"button\"\r\n            className=\"btn btn-block btn-primario\"\r\n            onClick={ onClickProducto}\r\n        >Nuevo Producto</button>\r\n\r\n        {\r\n            formulario \r\n            ?\r\n            (\r\n                \r\n                <form\r\n                className= \"formulario-nuevo-proyecto\"\r\n                onSubmit={onSubmitProyecto}\r\n                >\r\n                    <input \r\n                    type=\"text\"\r\n                    className=\"input-text\"\r\n                    placeholder=\"Nombre del Cliente\"\r\n                    name=\"nombre\"\r\n                    value={nombre}\r\n                    onChange ={onChangeProyecto}\r\n                    >\r\n                  \r\n                    </input>\r\n                    <input \r\n                    type=\"submit\" \r\n                    className=\"btn btn-primario btn-block\"\r\n                    value= \"Agregar Cliente\">\r\n                    </input>\r\n                </form>\r\n\r\n            ) : null\r\n\r\n        }\r\n        {errorformulario ? <p className=\"mensaje error\">El Nombre del Cliente es obligatorio</p> : null}\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default NuevoProyecto ;","import  { createContext } from 'react';\r\n\r\nconst tareaContext = createContext();\r\n\r\nexport default tareaContext;","import React,{useContext} from 'react';\r\nimport proyectoContext from '../../context/proyectos/proyectoContext';\r\nimport tareaContext from '../../context/tareas/tareaContext';\r\nconst Proyecto = ({proyecto}) => {\r\n    //obtener el state del proyecto\r\n    const proyectosContext = useContext(proyectoContext);\r\n    const {proyectoActual} = proyectosContext;\r\n    //obtener la funcion del context de tarea\r\n    const tareasContext = useContext(tareaContext);\r\n    const {obtenerTareas} = tareasContext;\r\n\r\n    //funcion para agregar el proyecto actual \r\n    const seleccionarProyecto = id => {\r\n        proyectoActual(id); //fijar un proyecto actual\r\n        obtenerTareas(id); //filtrar las tareas cuando se de click\r\n    }\r\n\r\n    return ( \r\n        <li>\r\n            <button\r\n    type=\"button\"\r\n    className=\"btn btn-blank\"\r\n    onClick = {() => seleccionarProyecto(proyecto._id)}\r\n    >{proyecto.nombre}</button>\r\n        </li>\r\n     );\r\n}\r\nexport default Proyecto;","import React, { useContext, useEffect } from 'react';\r\nimport Proyecto from './Proyecto';\r\nimport proyectoContext from '../../context/proyectos/proyectoContext';\r\nimport AlertaContext from '../../context/alertas/alertaContext';\r\nimport {TransitionGroup,CSSTransition} from 'react-transition-group';\r\nconst ListadoProyectos = () => {\r\n// extraer proyectos de state inicial \r\nconst proyectosContext = useContext(proyectoContext);\r\nconst {mensaje,proyectos,obtenerProyectos} = proyectosContext;\r\n\r\nconst alertaContext = useContext(AlertaContext);\r\nconst {alerta, mostrarAlerta} = alertaContext\r\n//obtener proyectos cuando carga el componente\r\nuseEffect( () =>{\r\n    //si hay un error \r\n    if(mensaje){\r\n        mostrarAlerta(mensaje.msg, mensaje.categoria);\r\n    }\r\n    obtenerProyectos();\r\n    //eslint-disable-next-line\r\n}, [mensaje]);\r\n//revisar si proyectos tiene contenido\r\nif(proyectos.length === 0) return <p>No hay Clientes, comienza agregando uno</p>;\r\n\r\n\r\n    return (  \r\n\r\n        <ul className=\"listado-proyectos\">\r\n            {alerta ? (<div className= {`alerta ${alerta.categoria}`}>{alerta.msg}</div> ): null}\r\n               <TransitionGroup>\r\n               {proyectos.map(proyecto => (\r\n                   <CSSTransition\r\n                     key= {proyecto._id}\r\n                     timeout= {200}\r\n                     classNames=\"proyecto\"\r\n                   >\r\n                        <Proyecto \r\n                            proyecto={proyecto} />  \r\n                   </CSSTransition>\r\n                ))}\r\n               </TransitionGroup>\r\n        </ul>\r\n    );\r\n}\r\n \r\nexport default ListadoProyectos;","import React from 'react';\r\nimport logo from './logo.png';\r\nimport NuevoProyecto from '../proyectos/NuevoProyecto'\r\nimport ListadoProyectos from '../proyectos/ListadoProyectos';\r\nconst Sidebar = () => {\r\n    return ( \r\n\r\n        <aside>\r\n            <img src={logo} className= \"logo-app\" alt=\"logo\" /><h1>PEDIDOS<span></span></h1>\r\n            <NuevoProyecto />\r\n            <div className=\"proyectos\">\r\n                <h2>Tus Clientes</h2>\r\n                <ListadoProyectos />\r\n            </div>\r\n        </aside>\r\n     );\r\n}\r\n \r\nexport default Sidebar;","import React,{useContext,useEffect} from 'react';\r\nimport AuthContext from '../../context/autenticacion/authContext';\r\nconst Barra = () => {\r\n      //Extraer la informacion de autenticacion\r\n      const authContext = useContext(AuthContext);\r\n      const {usuario,usuarioAutenticado, cerrarSesion} = authContext;\r\n      useEffect(() => {\r\n          usuarioAutenticado();\r\n          // eslint-disable-next-line\r\n      }, []);\r\n    return (  \r\n        <header className=\"app-header\">\r\n           {usuario ?  <p className=\"nombre-usuario\">Hola <span>{usuario.nombre}</span></p> : null}\r\n            <nav className=\"nav-principal\">\r\n               <button\r\n                    className=\"btn btn-blank cerrar-sesion\"\r\n                    onClick={() => cerrarSesion() }\r\n                >Cerrar Sesión</button>\r\n            </nav>\r\n        </header>\r\n    );\r\n}\r\n \r\nexport default Barra;","import React,{useContext,useState,useEffect} from 'react';\r\nimport proyectoContext from '../../context/proyectos/proyectoContext';\r\nimport tareaContext from '../../context/tareas/tareaContext';\r\n\r\nconst FormTarea = () => {\r\n//Extraer si un proyecto esta activo\r\nconst proyectosContext = useContext(proyectoContext);\r\nconst {proyecto} = proyectosContext;\r\nconst tareasContext = useContext(tareaContext);\r\nconst {tareaseleccionada, errortarea, agregarTarea,validarTarea,obtenerTareas,actualizarTarea,limpiarTarea} = tareasContext;\r\n//effect que detecta si hay una tarea seleccionada\r\n\r\nuseEffect(() => {\r\n    if(tareaseleccionada !== null){\r\n        guardarTarea(tareaseleccionada);\r\n    } else {\r\n        guardarTarea({\r\n            nombre: '',\r\n            \r\n            \r\n        })\r\n    }\r\n}, [tareaseleccionada]);\r\n\r\n//state dle formulario\r\n\r\nconst[tarea,guardarTarea] = useState({\r\n\r\n    producto: '',\r\n            nombre: '',\r\n            \r\n})\r\n//extrae el nombre del proyecto\r\n\r\nconst {nombre} = tarea;\r\nconst {comentario} = tarea; \r\n //si no hay proyecto selecionado \r\n if(!proyecto) return null;\r\n\r\n //array para destructuring y extrae el proyecto actual\r\n const [proyectoActual] = proyecto;\r\n\r\n //leer los valores del formulario\r\n\r\n const hadleChange = e => {\r\n     guardarTarea({\r\n         ...tarea,\r\n         [e.target.name] : e.target.value\r\n     })\r\n }\r\n\r\n const onSubmit = e => {\r\n     e.preventDefault();\r\n     //validar\r\n        if(nombre.trim() === ''){\r\n            validarTarea();\r\n            return;\r\n        }\r\n     \r\n     //revisar si es edicion o nueva tarea \r\n     if(tareaseleccionada === null){\r\n         //agregar la nueva tarea al state de tareas\r\n            tarea.proyecto = proyectoActual._id;\r\n            //tarea.estado= false;\r\n            agregarTarea(tarea);\r\n     } else {\r\n         // actualizar tarea existe \r\n         actualizarTarea(tarea);\r\n         //elimina tarea seleccionada del state\r\n         limpiarTarea();\r\n     }\r\n    \r\n\r\n     //obtener y filtrar las tareas del proyecto actual\r\n     obtenerTareas(proyectoActual.id);\r\n     //reiniciar el form \r\n     guardarTarea({\r\n        nombre: '',\r\n        \r\n\r\n     })\r\n }\r\n    return (  \r\n        <div className=\"formulario\">            \r\n        <form onSubmit= {onSubmit}>\r\n            <div className=\"contenedor-input\">\r\n                <input \r\n                    type=\"text\"\r\n                    className=\"input-text\"\r\n                    placeholder=\"Acciones...\"\r\n                    name=\"nombre\"\r\n                    value= {nombre}\r\n                    onChange = {hadleChange}\r\n                    />\r\n            </div>\r\n            \r\n            \r\n            <div className=\"contenedor-input\">\r\n                <input \r\n                    type=\"submit\"\r\n                    className=\"btn btn-primario btn-submit btn-block\"\r\n                    value={tareaseleccionada ? 'Editar Pedido' : 'Agregar Pedido'}\r\n                    />\r\n\r\n            </div>\r\n        </form>\r\n        {errortarea ? <p className= \"mensaje error\">El nombre del local es obligatorio</p> : null }\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default FormTarea;","import React, { useContext } from 'react';\r\nimport tareaContext from '../../context/tareas/tareaContext';\r\nimport proyectoContext from '../../context/proyectos/proyectoContext';\r\nconst Tarea = ({ tarea }) => {\r\n    const proyectosContext = useContext(proyectoContext);\r\n    const { proyecto } = proyectosContext;\r\n    const tareasContext = useContext(tareaContext);\r\n    const { eliminarTarea, obtenerTareas,actualizarTarea, guardarTareaActual } = tareasContext;\r\n\r\n    //extraer el proyecto \r\n    const [proyectoActual] = proyecto;\r\n\r\n    //funcion que se ejecuta cuando se presiona el boton de eliminar\r\n\r\n    const tareaEliminar = id => {\r\n        eliminarTarea(id,proyectoActual._id);\r\n        obtenerTareas(proyectoActual.id);\r\n    }\r\n\r\n    //funcion que modifica el estado de las tareas\r\n    const cambiarEstado = tarea => {\r\n        if (tarea.estado) {\r\n            tarea.estado = false;\r\n        } else {\r\n            tarea.estado = true;\r\n        }\r\n        actualizarTarea(tarea);\r\n    }\r\n\r\n    //funcion Agrega una tarea actual para editarla\r\n    const seleccionarTarea = tarea => {\r\n        guardarTareaActual(tarea);\r\n    }\r\n    return (\r\n        <li className=\"tarea sombra\">\r\n            <p> {tarea.nombre}</p>\r\n            <div className=\"estado\">\r\n                {tarea.estado\r\n                    ?\r\n                    (<button\r\n                        type=\"button\"\r\n                        className=\"completo\"\r\n                        onClick={() => cambiarEstado(tarea)}\r\n                    >Pagado </button>\r\n                    )\r\n                    : (\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"incompleto\"\r\n                            onClick={() => cambiarEstado(tarea)}\r\n                        >Impago </button>\r\n                    )\r\n\r\n                }\r\n            </div>\r\n            <div className=\"acciones\">\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primario\"\r\n                    onClick={()=> seleccionarTarea(tarea)}\r\n                >Editar</button>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-secundario\"\r\n                    onClick={() => tareaEliminar(tarea._id)}\r\n                >Eliminar </button>\r\n            </div>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default Tarea;","import React,{Fragment,useContext} from 'react';\r\nimport Tarea from './Tarea';\r\nimport proyectoContext from '../../context/proyectos/proyectoContext';\r\nimport tareaContext from '../../context/tareas/tareaContext';\r\nimport {CSSTransition, TransitionGroup} from 'react-transition-group';\r\nconst ListadoTareas = () => {\r\n    const proyectosContext = useContext(proyectoContext);\r\n    const {proyecto, eliminarProyecto} = proyectosContext;\r\n    \r\n    //obtener las tareas del proyecto\r\n     const tareasContext = useContext(tareaContext);\r\n     const {tareasproyecto} = tareasContext;\r\n    //si no hay proyecto selecionado \r\n    if(!proyecto) return <h2>Seleciona un Cliente</h2>\r\n    //Array destructuring para extraer el proyecto actual\r\n\r\n    const [proyectoActual] = proyecto;\r\n\r\n    // Elimina un proyecto\r\n    const onClickEliminar = () =>{\r\n        eliminarProyecto(proyectoActual._id)\r\n    }\r\n    return (\r\n        <Fragment>\r\n        <h2>Cliente: {proyectoActual.nombre}</h2>\r\n        <ul className=\"listado-tareas\">\r\n            {tareasproyecto.length === 0\r\n             ?(<li className =\"tarea\"><p>No Hay Pedidos</p></li>)            \r\n             : <TransitionGroup>\r\n                { tareasproyecto.map(tarea => (\r\n                 <CSSTransition\r\n                    key={tarea.id}\r\n                    timeout={200}\r\n                    className=\"tarea\"\r\n                 >\r\n                    <Tarea \r\n                        tarea={tarea}\r\n                    />\r\n                 </CSSTransition>\r\n             ))}\r\n             </TransitionGroup>\r\n            }\r\n\r\n\r\n        </ul>\r\n        <button \r\n        type=\"button\"\r\n        className=\"btn btn-eliminar\"\r\n        onClick = {onClickEliminar}\r\n        >Eliminar Cliente &times;</button>\r\n        </Fragment>\r\n     );\r\n}\r\n \r\nexport default ListadoTareas;","import React,{useContext,useEffect} from 'react';\r\nimport Sidebar from '../layout/Sidebar';\r\nimport Barra from '../layout/Barra';\r\nimport FormTarea from '../tareas/FormTarea';\r\nimport ListadoTareas from '../tareas/ListadoTareas';\r\nimport AuthContext from '../../context/autenticacion/authContext';\r\nconst Proyectos = () => {\r\n\r\n    //Extraer la informacion de autenticacion\r\n    const authContext = useContext(AuthContext);\r\n    const {usuarioAutenticado} = authContext;\r\n    useEffect(() => {\r\n        usuarioAutenticado();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n    return (  \r\n\r\n           <div className=\"contenedor-app\">\r\n              <Sidebar /> \r\n\r\n               <div className =\"seccion-principal\">\r\n                   <Barra />\r\n                   <main>\r\n                   <FormTarea />\r\n                       <div className=\"contenedor-tareas\">\r\n                       <ListadoTareas />\r\n                       </div>\r\n                   </main>\r\n               </div>\r\n           </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Proyectos;","import React from 'react';\r\n\r\n\r\nfunction Header({titulo}) {\r\n\r\n    return(\r\n        \r\n        <h1 className=\"encabezado\">\r\n            {titulo}</h1>\r\n     \r\n    )\r\n}\r\n\r\nexport default Header;","import {FORMULARIO_PROYECTO,OBTENER_PROYECTOS,\r\n       AGREGAR_PROYECTO, VALIDAR_FORMULARIO,\r\n       PROYECTO_ERROR,\r\n       PROYECTO_ACTUAL,ELIMINAR_PROYECTO} from '../../types';\r\n\r\nexport default (state,action) => {\r\n    switch(action.type){\r\n\r\n        case FORMULARIO_PROYECTO:\r\n            return {\r\n                ...state,\r\n                formulario: true\r\n            }\r\n        case OBTENER_PROYECTOS:\r\n            return {\r\n                ...state,\r\n                proyectos: action.payload\r\n            }\r\n            case AGREGAR_PROYECTO:\r\n                return{\r\n                    ...state,\r\n                    proyectos:[...state.proyectos,action.payload],\r\n                    formulario: false,\r\n                    errorformulario: false\r\n                }\r\n            case VALIDAR_FORMULARIO:\r\n                return{\r\n                    ...state,\r\n                    errorformulario: true\r\n                }\r\n            case PROYECTO_ACTUAL:\r\n                return{\r\n                    ...state,\r\n                    proyecto: state.proyectos.filter(proyecto => proyecto._id === action.payload)\r\n                }\r\n            case ELIMINAR_PROYECTO:\r\n                return{\r\n                    ...state,\r\n                    proyectos: state.proyectos.filter(proyecto => proyecto._id !== action.payload),\r\n                    proyecto: null\r\n                }\r\n            case PROYECTO_ERROR: \r\n                return{\r\n                    ...state,\r\n                    mensaje: action.payload\r\n                }\r\n        default:\r\n            return state;\r\n    }\r\n}","export const FORMULARIO_PROYECTO = 'FORMULARIO_PROYECTO';\r\nexport const OBTENER_PROYECTOS = 'OBTENER_PROYECTOS';\r\nexport const AGREGAR_PROYECTO = 'AGREGAR_PROYECTO';\r\nexport const VALIDAR_FORMULARIO = 'VALIDAR_FORMULARIO';\r\nexport const PROYECTO_ACTUAL = 'PROYECTO_ACTUAL';\r\nexport const ELIMINAR_PROYECTO = 'ELIMINAR_PROYECTO';\r\nexport const PROYECTO_ERROR = 'PROYECTO_ERROR';\r\n\r\nexport const TAREAS_PROYECTO = 'TAREAS_PROYECTO';\r\nexport const AGREGAR_TAREA = 'AGREGAR_TAREA';\r\nexport const VALIDAR_TAREA = 'VALIDAR_TAREA';\r\nexport const ELIMINAR_TAREA = 'ELIMINAR_TAREA';\r\n\r\nexport const TAREA_ACTUAL = 'TAREA_ACTUAL';\r\nexport const ACTUALIZAR_TAREA = 'ACTUALIZAR_TAREA';\r\nexport const LIMPIAR_TAREA = 'LIMPIAR_TAREA';\r\n\r\nexport const MOSTRAR_ALERTA = 'MOSTRAR_ALERTA';\r\nexport const OCULTAR_ALERTA = 'OCULTAR_ALERTA';\r\n\r\nexport const REGISTRO_EXITOSO = 'REGISTRO_EXITOSO';\r\nexport const REGISTRO_ERROR = 'REGISTRO_ERROR';\r\nexport const OBTENER_USUARIO = 'OBTENER_USUARIO';\r\nexport const LOGIN_EXITOSO = 'LOGIN_EXITOSO';\r\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\r\nexport const CERRAR_SESION = 'CERRAR_SESION';","import axios from 'axios';\r\n\r\nconst clienteAxios = axios.create({\r\n\r\n    baseURL: process.env.REACT_APP_BACKEND_URL\r\n});\r\n\r\nexport default clienteAxios;","import React, {useReducer} from 'react';\r\n//import {v4 as uuid} from 'uuid';\r\nimport proyectoContext from './proyectoContext';\r\nimport proyectoReducer from './proyectoReducer';\r\nimport {FORMULARIO_PROYECTO,\r\n        OBTENER_PROYECTOS,\r\n        AGREGAR_PROYECTO,\r\n        VALIDAR_FORMULARIO,\r\n        PROYECTO_ACTUAL,\r\n        ELIMINAR_PROYECTO,\r\n        PROYECTO_ERROR\r\n    } from '../../types';\r\nimport clienteAxios from '../../config/axios';\r\n\r\n\r\nconst ProyectoState = props => {\r\n/*\r\n    const proyectos = [\r\n        {id:1, nombre: 'Estudio1'},\r\n        {id:2, nombre: 'MASTER CH 10'},\r\n        {id:3, nombre: 'TOM'}\r\n    ]*/\r\n    const initialState = {\r\n         proyectos : [\r\n            \r\n        ],\r\n        formulario : false,\r\n        errorformulario: false,\r\n        proyecto: null,\r\n        mensaje: null\r\n    }\r\n\r\n    const [state, dispatch] = useReducer(proyectoReducer, initialState)\r\n    //serie de funciones para el CRUD\r\n    const mostrarFormulario = () => {\r\n        dispatch({\r\n            type: FORMULARIO_PROYECTO\r\n        })\r\n    }\r\n\r\n    //obtner proyectos \r\n    const obtenerProyectos= async () => {\r\n        try {\r\n            const resultado = await clienteAxios.get('/api/proyectos');\r\n            dispatch({\r\n                type: OBTENER_PROYECTOS,\r\n                payload: resultado.data.proyectos\r\n            })\r\n        } catch (error) {\r\n            const alerta= {\r\n                msg: 'Hubo un error',\r\n                categoria: 'alerta-error'\r\n            }\r\n            dispatch({\r\n                type: PROYECTO_ERROR,\r\n                payload: alerta\r\n            })\r\n        }\r\n        \r\n    }\r\n    //Agregar nuevo Proyecto\r\n    const agregarProyecto = async proyecto => {\r\n       /* proyecto.id = uuid();\r\n        \r\n        */\r\n        try {\r\n            const resultado = await clienteAxios.post('/api/proyectos', proyecto);\r\n            console.log(resultado);\r\n            //INsertar el proyecto en el state \r\n            dispatch({\r\n                type: AGREGAR_PROYECTO,\r\n                payload: resultado.data\r\n            })\r\n        } catch (error) {\r\n            const alerta= {\r\n                msg: 'Hubo un error',\r\n                categoria: 'alerta-error'\r\n            }\r\n            dispatch({\r\n                type: PROYECTO_ERROR,\r\n                payload: alerta\r\n            })\r\n        }\r\n    }\r\n    //VALIDAR EL FORMULARIO\r\n    const mostrarError = () => {\r\n        dispatch({\r\n            type: VALIDAR_FORMULARIO\r\n        })\r\n    }\r\n    //selecciona el proyecto que el usuario dio click\r\n    const proyectoActual= proyectoId => \r\n    {\r\n        dispatch({\r\n            type: PROYECTO_ACTUAL,\r\n            payload: proyectoId\r\n        })\r\n    }\r\n    //Eliminar un proyecto\r\n    const eliminarProyecto = async proyectoId => {\r\n        try {\r\n            await clienteAxios.delete(`/api/proyectos/${proyectoId}`);\r\n            dispatch({\r\n                type: ELIMINAR_PROYECTO,\r\n                payload: proyectoId\r\n            })\r\n            \r\n        } catch (error) {\r\n            const alerta= {\r\n                msg: 'Hubo un error',\r\n                categoria: 'alerta-error'\r\n            }\r\n            dispatch({\r\n                type: PROYECTO_ERROR,\r\n                payload: alerta\r\n            })\r\n        }\r\n        \r\n    }\r\n    return(\r\n        <proyectoContext.Provider\r\n        value={{\r\n            proyectos: state.proyectos,\r\n            formulario: state.formulario,\r\n            errorformulario: state.errorformulario,\r\n            proyecto: state.proyecto,\r\n            mensaje: state.mensaje,\r\n            mostrarFormulario,\r\n            obtenerProyectos,\r\n            agregarProyecto,\r\n            mostrarError,\r\n            proyectoActual,\r\n            eliminarProyecto\r\n        }}>\r\n            {props.children}\r\n        </proyectoContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ProyectoState;","import {TAREAS_PROYECTO,AGREGAR_TAREA,\r\n    VALIDAR_TAREA, ELIMINAR_TAREA,\r\n    TAREA_ACTUAL,\r\n    ACTUALIZAR_TAREA,LIMPIAR_TAREA\r\n\r\n} from '../../types';\r\n\r\nexport default (state,action) => {\r\n    switch(action.type){\r\n        case TAREAS_PROYECTO: \r\n            return{\r\n                ...state,\r\n                tareasproyecto: action.payload\r\n            }\r\n        case AGREGAR_TAREA:\r\n            return{\r\n                ...state,\r\n                tareasproyecto: [ action.payload,...state.tareasproyecto],\r\n                errortarea: false\r\n            }\r\n        case VALIDAR_TAREA:\r\n            return{\r\n                ...state,\r\n                errortarea: true\r\n            }\r\n        case ELIMINAR_TAREA:\r\n            return{\r\n                ...state,\r\n                tareasproyecto: state.tareasproyecto.filter(tarea => tarea._id !== action.payload)\r\n            }\r\n        case ACTUALIZAR_TAREA:\r\n            return{\r\n                ...state,\r\n                tareasproyecto: state.tareasproyecto.map(tarea => tarea._id === \r\n                    action.payload._id ? action.payload : tarea)\r\n            }\r\n        case TAREA_ACTUAL:\r\n            return{\r\n                ...state,\r\n                tareaseleccionada: action.payload   \r\n            }\r\n        case LIMPIAR_TAREA:\r\n            return{\r\n                ...state,\r\n                tareaseleccionada : null\r\n            }\r\n        \r\n        default: \r\n            return state;\r\n    }\r\n}","import React, {useReducer} from 'react';\r\nimport TareaContext from './tareaContext';\r\nimport TareaReducer from './tareaReducer';\r\nimport {TAREAS_PROYECTO,AGREGAR_TAREA,\r\n        VALIDAR_TAREA,ELIMINAR_TAREA,\r\n        TAREA_ACTUAL,\r\n        ACTUALIZAR_TAREA, LIMPIAR_TAREA\r\n\r\n} from '../../types';\r\n//import {v4 as uuid} from 'uuid';\r\nimport clienteAxios from '../../config/axios'\r\nconst TareaState = props => {\r\n\r\n    const initialState = {\r\n      /*  tareas: [\r\n            {id:1, nombre: 'Director', estado: true, proyectoId: 1},\r\n            {id:2,nombre: 'Camara', estado: true, proyectoId: 2},\r\n            {id:3,nombre: 'Tom', estado: true, proyectoId: 3},\r\n            {id:4,nombre: 'Asistente', estado: false, proyectoId: 4}\r\n        ],*/\r\n        tareasproyecto: [],\r\n        errortarea: false,\r\n        tareaseleccionada : null\r\n    }\r\n\r\n\r\n    //crear dispatch y state\r\n\r\n    const [state, dispatch] = useReducer(TareaReducer, initialState);\r\n    // Crear las Funciones\r\n\r\n    //Obtener las tareas de un proyecto\r\n\r\n    const obtenerTareas = async proyecto => {\r\n        try {\r\n            const resultado = await clienteAxios.get('/api/tareas',{params: {proyecto}});\r\n            dispatch({\r\n                type: TAREAS_PROYECTO,\r\n                payload: resultado.data.tareas\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    //agregar una tarea al proyecto\r\n    const agregarTarea = async tarea => {\r\n       // tarea.id = uuid();\r\n       try {\r\n           const resultado = await clienteAxios.post('/api/tareas',tarea);\r\n        dispatch({\r\n            type: AGREGAR_TAREA,\r\n            payload: resultado.data.tarea\r\n        })\r\n       } catch (error) {\r\n           console.log(error);\r\n       }\r\n        \r\n    }\r\n\r\n    //valida y muesta un error\r\n    const validarTarea = () => {\r\n        dispatch({\r\n            type: VALIDAR_TAREA\r\n        })\r\n    }\r\n    //eliminar tarea por id \r\n    const eliminarTarea = async (id,proyecto) => {\r\n        try {\r\n            await clienteAxios.delete(`/api/tareas/${id}`,{params:{proyecto}});\r\n            dispatch({\r\n                type: ELIMINAR_TAREA,\r\n                payload: id\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n     //edita o modifica una tarea\r\n    const actualizarTarea = async tarea => {\r\n        \r\n        try {\r\n            const resultado = await clienteAxios.put(`/api/tareas/${tarea._id}`,tarea);\r\n            \r\n            dispatch({\r\n                type: ACTUALIZAR_TAREA,\r\n                payload: resultado.data.tarea\r\n        }) \r\n        } catch (error) {\r\n            console.log(error);\r\n        }  \r\n}\r\n    // extrae la tarea para edicion\r\n    const guardarTareaActual = tarea => {\r\n        dispatch({\r\n            type: TAREA_ACTUAL,\r\n            payload: tarea\r\n        })\r\n    }\r\n\r\n  \r\n    //elimina la tarea seleccionada\r\n    const limpiarTarea = () => {\r\n        dispatch({\r\n            type: LIMPIAR_TAREA\r\n        })\r\n    }\r\n    return(\r\n        <TareaContext.Provider\r\n            value={{\r\n              //  tareas: state.tareas,\r\n                tareasproyecto : state.tareasproyecto,\r\n                errortarea: state.errortarea,\r\n                tareaseleccionada: state.tareaseleccionada,\r\n                obtenerTareas,\r\n                agregarTarea,\r\n                validarTarea,\r\n                eliminarTarea,\r\n                guardarTareaActual,\r\n                actualizarTarea,\r\n                limpiarTarea\r\n            }}\r\n        >\r\n            {props.children}\r\n        </TareaContext.Provider>\r\n    )\r\n}\r\n\r\nexport default TareaState;\r\n\r\n","import {MOSTRAR_ALERTA, OCULTAR_ALERTA} from'../../types';\r\n\r\nexport default (state, action) => {\r\n    switch(action.type){\r\n        case MOSTRAR_ALERTA:\r\n                return{\r\n                    alerta: action.payload\r\n                }\r\n        case OCULTAR_ALERTA:\r\n            return {\r\n                alerta: null\r\n            }\r\n            \r\n        default:\r\n                return state;\r\n    }\r\n}","import React, {useReducer} from 'react';\r\nimport {MOSTRAR_ALERTA, OCULTAR_ALERTA} from '../../types';\r\nimport alertaReducer from './alertaReducer';\r\nimport alertaContext from './alertaContext';\r\n\r\nconst AlertaState = props => {\r\n    const initialState = {\r\n        alerta: null\r\n    }\r\n    const [state, dispatch] = useReducer(alertaReducer, initialState);\r\n\r\n    //funciones \r\n\r\n    const mostrarAlerta = (msg, categoria) => {\r\n        dispatch({\r\n            type: MOSTRAR_ALERTA,\r\n            payload: {\r\n                msg,\r\n                categoria\r\n            }\r\n        });\r\n        setTimeout(() => {\r\n            dispatch({\r\n                type: OCULTAR_ALERTA\r\n            })\r\n        }, 5000);\r\n    }\r\n    return(\r\n        <alertaContext.Provider\r\n         value={{\r\n             alerta: state.alerta,\r\n             mostrarAlerta\r\n         }}\r\n        >\r\n            {props.children}\r\n\r\n        </alertaContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AlertaState;","import {REGISTRO_ERROR,REGISTRO_EXITOSO,\r\n        OBTENER_USUARIO,LOGIN_ERROR,\r\n        LOGIN_EXITOSO,CERRAR_SESION\r\n} from'../../types';\r\n\r\nexport default (state, action) => {\r\n    switch(action.type){\r\n       case REGISTRO_EXITOSO:\r\n       case LOGIN_EXITOSO:\r\n           localStorage.setItem('token',action.payload.token);\r\n            return{\r\n                ...state,\r\n                autenticado: true,\r\n                mensaje: null,\r\n                cargando: false\r\n            }\r\n        case OBTENER_USUARIO:\r\n            return{\r\n                ...state,\r\n                autenticado: true,\r\n                usuario: action.payload,\r\n                cargando: false\r\n            }\r\n        case CERRAR_SESION:\r\n        case LOGIN_ERROR:\r\n        case REGISTRO_ERROR:\r\n            localStorage.removeItem('token');\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                usuario: null,\r\n                autenticado: false,\r\n                mensaje: action.payload,\r\n                cargando: false\r\n            }\r\n       case REGISTRO_ERROR:\r\n            return{\r\n                ...state,\r\n                token: null,\r\n                mensaje: action.payload\r\n            }\r\n\r\n        default:\r\n                return state;\r\n    }\r\n}","import clienteAxios from './axios';\r\n\r\nconst tokenAuth = token => {\r\n    if(token){\r\n        clienteAxios.defaults.headers.common['x-auth-token'] = token;\r\n    } else {\r\n        delete clienteAxios.defaults.headers.common['x-auth-token'];\r\n    }\r\n}\r\n\r\nexport default tokenAuth;","import React, {useReducer} from 'react';\r\nimport {REGISTRO_ERROR,REGISTRO_EXITOSO,\r\n    OBTENER_USUARIO,LOGIN_ERROR,\r\n    LOGIN_EXITOSO,CERRAR_SESION\r\n} from'../../types';\r\nimport authReducer from './authReducer';\r\nimport AuthContext from './authContext';\r\nimport clienteAxios from '../../config/axios';\r\nimport tokenAuth from '../../config/tokenAuth';\r\n\r\nconst AuthState = props => {\r\n    const initialState = {\r\n        token: localStorage.getItem('token'),\r\n        autenticado: null,\r\n        usuario: null,\r\n        mensaje: null,\r\n        cargando: true\r\n    }\r\n    const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n    const registrarUsuario = async datos => {\r\n        try {\r\n            const respuesta = await clienteAxios.post('/api/usuarios',datos);\r\n            console.log(respuesta.data);\r\n            dispatch({\r\n                type: REGISTRO_EXITOSO,\r\n                payload: respuesta.data\r\n            })\r\n\r\n            //obtener el usuario\r\n            usuarioAutenticado();\r\n        } catch (error) {\r\n            //console.log(error.response.data.msg);\r\n             const alerta = {\r\n                 msg: error.response.data.msg,\r\n                 categoria: 'alerta-error'\r\n             }\r\n            dispatch({\r\n                type: REGISTRO_ERROR,\r\n                payload: alerta\r\n            })\r\n        }\r\n    }\r\n    //retorna el usuario autenticado\r\n    const usuarioAutenticado = async () => {\r\n        const token = localStorage.getItem('token');\r\n        if(token){\r\n            tokenAuth(token);\r\n        }\r\n        try {\r\n            const respuesta = await clienteAxios.get('/api/auth');\r\n            //console.log(respuesta);\r\n            dispatch({\r\n                type: OBTENER_USUARIO,\r\n                payload: respuesta.data.usuario\r\n            })\r\n        } catch (error) {\r\n            console.log(error.response);\r\n            dispatch({\r\n                type: LOGIN_ERROR\r\n            })\r\n        }\r\n    }\r\n\r\n    //cuando el usuario inicia sesion \r\n\r\n    const iniciarSesion = async datos => {\r\n        try {\r\n            const respuesta = await clienteAxios.post('/api/auth',datos);\r\n            dispatch({\r\n                type:LOGIN_EXITOSO,\r\n                payload: respuesta.data\r\n            });\r\n            //obtener el usuario\r\n            usuarioAutenticado();\r\n        } catch (error) {\r\n            const alerta = {\r\n                msg: error.response.data.msg,\r\n                categoria: 'alerta-error'\r\n            }\r\n           dispatch({\r\n               type: LOGIN_ERROR,\r\n               payload: alerta\r\n           })\r\n        }\r\n    }\r\n    //Cierra la sesion del usuario\r\n    const cerrarSesion = () => {\r\n        dispatch({\r\n            type: CERRAR_SESION\r\n        })\r\n    }\r\n    return(\r\n        <AuthContext.Provider\r\n        value={{\r\n            token: state.token,\r\n            autenticado: state.autenticado,\r\n            usuario: state.usuario,\r\n            mensaje: state.mensaje,\r\n            cargando: state.cargando,\r\n            registrarUsuario,\r\n            iniciarSesion,\r\n            usuarioAutenticado,\r\n            cerrarSesion\r\n        }}\r\n        >\r\n\r\n        {props.children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AuthState;","import React,{useContext, useEffect} from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport AuthContext from '../../context/autenticacion/authContext';\r\n\r\n\r\nconst RutaPrivada = ({component: Component, ...props}) => {\r\n    const authContext= useContext(AuthContext);\r\n    const {autenticado,cargando, usuarioAutenticado}= authContext;\r\n    useEffect(() => {\r\n        \r\n        usuarioAutenticado();\r\n        // eslint-disable-next-line\r\n    }, [])\r\n    return ( \r\n        <Route {...props} render={props => !autenticado && !cargando ? (\r\n            <Redirect to=\"/\" />\r\n        ) : (\r\n            <Component {...props}/>\r\n        )}\r\n            />\r\n     );\r\n}\r\n \r\nexport default RutaPrivada;","import React, { Fragment , useState} from 'react';\nimport {BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Login from './components/auth/Login';\nimport NuevaCuenta from './components/auth/NuevaCuenta';\nimport Proyectos from './components/proyectos/Proyectos';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Producto from './components/Producto';\nimport ProyectoState from './context/proyectos/proyectoState';\nimport TareaState from './context/tareas/tareaState';\nimport AlertaState from './context/alertas/alertaState';\nimport AuthState from './context/autenticacion/authState';\nimport tokenAuth from './config/tokenAuth';\nimport RutaPrivada from './components/rutas/RutaPrivada';\n//Revisar si tenemos un token\nconst token = localStorage.getItem('token');\nif(token){\n    tokenAuth(token);\n}\nfunction App() {\n\n    // Crear listado de Productos\n\n    const [productos, guardarProductos ] = useState([\n        {id:1, nombre: 'Servidor', ip: '192.168.155.10'},\n        {id:2, nombre: 'Director', ip: '192.168.155.11'},\n    ]);\n    \n    //Obtener la fe<cha\n\n    const fecha = new Date().getFullYear();\n\n    console.log(process.env.REACT_APP_BACKEND_URL);\n    return ( <ProyectoState>\n        <TareaState>\n        <AlertaState>\n            <AuthState>\n            <Router>\n                <Switch>\n                    <Route exact path=\"/\" component = {Login} />\n                    <Route exact path=\"/nueva-cuenta\" component =\n                     {NuevaCuenta} />\n                    <RutaPrivada exact path=\"/proyecto\" component = \n                     {Proyectos} />\n                </Switch>\n            </Router>\n            </AuthState>\n            </AlertaState>\n            </TareaState>\n            </ProyectoState>\n            \n    );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}